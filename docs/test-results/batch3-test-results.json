{
  "summary": {
    "total": 16,
    "passed": 15,
    "failed": 1,
    "passRate": "93.8"
  },
  "byRoute": {
    "GET /api/v1/drivers?page=1&limit=10": {
      "passed": 0,
      "failed": 1,
      "tests": [
        {
          "route": "GET /api/v1/drivers?page=1&limit=10",
          "test": "Basic list",
          "passed": false,
          "statusCode": 200,
          "duration": 2930,
          "response": {
            "data": [],
            "total": 0,
            "page": 1,
            "totalPages": 0
          },
          "error": "{\n  \"data\": [],\n  \"total\": 0,\n  \"page\": 1,\n  \"totalPages\": 0\n}"
        }
      ]
    },
    "GET /api/v1/drivers?page=1&limit=20&sortBy=created_at&sortOrder=desc&driver_status=active&cooperation_type=employee&rating_min=4.0&rating_max=5.0&search=test&has_active_assignment=true&expiring_documents=30": {
      "passed": 1,
      "failed": 0,
      "tests": [
        {
          "route": "GET /api/v1/drivers?page=1&limit=20&sortBy=created_at&sortOrder=desc&driver_status=active&cooperation_type=employee&rating_min=4.0&rating_max=5.0&search=test&has_active_assignment=true&expiring_documents=30",
          "test": "Complex query (11 params)",
          "passed": true,
          "statusCode": 200,
          "duration": 1535,
          "response": {
            "data": [],
            "total": 0,
            "page": 1,
            "totalPages": 0
          }
        }
      ]
    },
    "GET /api/v1/drivers?sortBy=invalid_field": {
      "passed": 1,
      "failed": 0,
      "tests": [
        {
          "route": "GET /api/v1/drivers?sortBy=invalid_field",
          "test": "Invalid sortBy",
          "passed": true,
          "statusCode": 400,
          "duration": 268,
          "response": {
            "error": {
              "code": "VALIDATION_ERROR",
              "message": "Validation failed",
              "details": [
                {
                  "code": "invalid_value",
                  "values": [
                    "created_at",
                    "last_name",
                    "email",
                    "rating",
                    "driver_status",
                    "employment_status"
                  ],
                  "path": ["sortBy"],
                  "message": "Invalid option: expected one of \"created_at\"|\"last_name\"|\"email\"|\"rating\"|\"driver_status\"|\"employment_status\""
                }
              ],
              "path": "/api/v1/drivers",
              "timestamp": "2025-10-18T16:42:40.686Z",
              "request_id": "72460d2f-e677-4ccc-a01f-23a49651c835"
            }
          }
        }
      ]
    },
    "GET /api/v1/drivers": {
      "passed": 1,
      "failed": 0,
      "tests": [
        {
          "route": "GET /api/v1/drivers",
          "test": "Unauthorized",
          "passed": true,
          "statusCode": 401,
          "duration": 264,
          "response": {
            "error": "Unauthorized"
          }
        }
      ]
    },
    "POST /api/v1/directory/makes": {
      "passed": 4,
      "failed": 0,
      "tests": [
        {
          "route": "POST /api/v1/directory/makes",
          "test": "Create make",
          "passed": true,
          "statusCode": 201,
          "duration": 3017,
          "response": {
            "id": "8c626d15-1303-4350-b729-f7f4ce766df1",
            "tenant_id": null,
            "name": "Tesla_Test_1760805760964",
            "created_at": "2025-10-18T16:42:43.346Z",
            "updated_at": "2025-10-18T16:42:43.346Z"
          }
        },
        {
          "route": "POST /api/v1/directory/makes",
          "test": "Duplicate name",
          "passed": true,
          "statusCode": 409,
          "duration": 2403,
          "response": {
            "error": {
              "code": "CONFLICT",
              "message": "Car make \"Tesla_Test_1760805760964\" already exists globally",
              "path": "/api/v1/directory/makes",
              "timestamp": "2025-10-18T16:42:46.383Z",
              "request_id": "7b382824-9e42-4ae7-ae66-73e1e5819a94"
            }
          }
        },
        {
          "route": "POST /api/v1/directory/makes",
          "test": "Invalid body",
          "passed": true,
          "statusCode": 400,
          "duration": 1889,
          "response": {
            "error": {
              "code": "VALIDATION_ERROR",
              "message": "Validation failed",
              "details": [
                {
                  "expected": "string",
                  "code": "invalid_type",
                  "path": ["name"],
                  "message": "Invalid input: expected string, received undefined"
                }
              ],
              "path": "/api/v1/directory/makes",
              "timestamp": "2025-10-18T16:42:48.272Z",
              "request_id": "34cdb348-fdf0-43ff-a981-a12fc4d03510"
            }
          }
        },
        {
          "route": "POST /api/v1/directory/makes",
          "test": "Unauthorized",
          "passed": true,
          "statusCode": 401,
          "duration": 140,
          "response": {
            "error": "Unauthorized"
          }
        }
      ]
    },
    "GET /api/v1/directory/regulations": {
      "passed": 2,
      "failed": 0,
      "tests": [
        {
          "route": "GET /api/v1/directory/regulations",
          "test": "List all regulations",
          "passed": true,
          "statusCode": 200,
          "duration": 886,
          "response": []
        },
        {
          "route": "GET /api/v1/directory/regulations",
          "test": "Unauthorized",
          "passed": true,
          "statusCode": 401,
          "duration": 18,
          "response": {
            "error": "Unauthorized"
          }
        }
      ]
    },
    "GET /api/v1/directory/regulations?country_code=FR": {
      "passed": 1,
      "failed": 0,
      "tests": [
        {
          "route": "GET /api/v1/directory/regulations?country_code=FR",
          "test": "Filter by country",
          "passed": true,
          "statusCode": 200,
          "duration": 895,
          "response": []
        }
      ]
    },
    "GET /api/v1/vehicles/insurance-expiring": {
      "passed": 2,
      "failed": 0,
      "tests": [
        {
          "route": "GET /api/v1/vehicles/insurance-expiring",
          "test": "Default daysAhead",
          "passed": true,
          "statusCode": 200,
          "duration": 1053,
          "response": []
        },
        {
          "route": "GET /api/v1/vehicles/insurance-expiring",
          "test": "Unauthorized",
          "passed": true,
          "statusCode": 401,
          "duration": 14,
          "response": {
            "error": "Unauthorized"
          }
        }
      ]
    },
    "GET /api/v1/vehicles/insurance-expiring?daysAhead=60": {
      "passed": 1,
      "failed": 0,
      "tests": [
        {
          "route": "GET /api/v1/vehicles/insurance-expiring?daysAhead=60",
          "test": "Custom daysAhead",
          "passed": true,
          "statusCode": 200,
          "duration": 899,
          "response": []
        }
      ]
    },
    "GET /api/v1/vehicles/maintenance": {
      "passed": 2,
      "failed": 0,
      "tests": [
        {
          "route": "GET /api/v1/vehicles/maintenance",
          "test": "List maintenance needed",
          "passed": true,
          "statusCode": 200,
          "duration": 1168,
          "response": []
        },
        {
          "route": "GET /api/v1/vehicles/maintenance",
          "test": "Unauthorized",
          "passed": true,
          "statusCode": 401,
          "duration": 20,
          "response": {
            "error": "Unauthorized"
          }
        }
      ]
    }
  },
  "allResults": [
    {
      "route": "GET /api/v1/drivers?page=1&limit=10",
      "test": "Basic list",
      "passed": false,
      "statusCode": 200,
      "duration": 2930,
      "response": {
        "data": [],
        "total": 0,
        "page": 1,
        "totalPages": 0
      },
      "error": "{\n  \"data\": [],\n  \"total\": 0,\n  \"page\": 1,\n  \"totalPages\": 0\n}"
    },
    {
      "route": "GET /api/v1/drivers?page=1&limit=20&sortBy=created_at&sortOrder=desc&driver_status=active&cooperation_type=employee&rating_min=4.0&rating_max=5.0&search=test&has_active_assignment=true&expiring_documents=30",
      "test": "Complex query (11 params)",
      "passed": true,
      "statusCode": 200,
      "duration": 1535,
      "response": {
        "data": [],
        "total": 0,
        "page": 1,
        "totalPages": 0
      }
    },
    {
      "route": "GET /api/v1/drivers?sortBy=invalid_field",
      "test": "Invalid sortBy",
      "passed": true,
      "statusCode": 400,
      "duration": 268,
      "response": {
        "error": {
          "code": "VALIDATION_ERROR",
          "message": "Validation failed",
          "details": [
            {
              "code": "invalid_value",
              "values": [
                "created_at",
                "last_name",
                "email",
                "rating",
                "driver_status",
                "employment_status"
              ],
              "path": ["sortBy"],
              "message": "Invalid option: expected one of \"created_at\"|\"last_name\"|\"email\"|\"rating\"|\"driver_status\"|\"employment_status\""
            }
          ],
          "path": "/api/v1/drivers",
          "timestamp": "2025-10-18T16:42:40.686Z",
          "request_id": "72460d2f-e677-4ccc-a01f-23a49651c835"
        }
      }
    },
    {
      "route": "GET /api/v1/drivers",
      "test": "Unauthorized",
      "passed": true,
      "statusCode": 401,
      "duration": 264,
      "response": {
        "error": "Unauthorized"
      }
    },
    {
      "route": "POST /api/v1/directory/makes",
      "test": "Create make",
      "passed": true,
      "statusCode": 201,
      "duration": 3017,
      "response": {
        "id": "8c626d15-1303-4350-b729-f7f4ce766df1",
        "tenant_id": null,
        "name": "Tesla_Test_1760805760964",
        "created_at": "2025-10-18T16:42:43.346Z",
        "updated_at": "2025-10-18T16:42:43.346Z"
      }
    },
    {
      "route": "POST /api/v1/directory/makes",
      "test": "Duplicate name",
      "passed": true,
      "statusCode": 409,
      "duration": 2403,
      "response": {
        "error": {
          "code": "CONFLICT",
          "message": "Car make \"Tesla_Test_1760805760964\" already exists globally",
          "path": "/api/v1/directory/makes",
          "timestamp": "2025-10-18T16:42:46.383Z",
          "request_id": "7b382824-9e42-4ae7-ae66-73e1e5819a94"
        }
      }
    },
    {
      "route": "POST /api/v1/directory/makes",
      "test": "Invalid body",
      "passed": true,
      "statusCode": 400,
      "duration": 1889,
      "response": {
        "error": {
          "code": "VALIDATION_ERROR",
          "message": "Validation failed",
          "details": [
            {
              "expected": "string",
              "code": "invalid_type",
              "path": ["name"],
              "message": "Invalid input: expected string, received undefined"
            }
          ],
          "path": "/api/v1/directory/makes",
          "timestamp": "2025-10-18T16:42:48.272Z",
          "request_id": "34cdb348-fdf0-43ff-a981-a12fc4d03510"
        }
      }
    },
    {
      "route": "POST /api/v1/directory/makes",
      "test": "Unauthorized",
      "passed": true,
      "statusCode": 401,
      "duration": 140,
      "response": {
        "error": "Unauthorized"
      }
    },
    {
      "route": "GET /api/v1/directory/regulations",
      "test": "List all regulations",
      "passed": true,
      "statusCode": 200,
      "duration": 886,
      "response": []
    },
    {
      "route": "GET /api/v1/directory/regulations?country_code=FR",
      "test": "Filter by country",
      "passed": true,
      "statusCode": 200,
      "duration": 895,
      "response": []
    },
    {
      "route": "GET /api/v1/directory/regulations",
      "test": "Unauthorized",
      "passed": true,
      "statusCode": 401,
      "duration": 18,
      "response": {
        "error": "Unauthorized"
      }
    },
    {
      "route": "GET /api/v1/vehicles/insurance-expiring",
      "test": "Default daysAhead",
      "passed": true,
      "statusCode": 200,
      "duration": 1053,
      "response": []
    },
    {
      "route": "GET /api/v1/vehicles/insurance-expiring?daysAhead=60",
      "test": "Custom daysAhead",
      "passed": true,
      "statusCode": 200,
      "duration": 899,
      "response": []
    },
    {
      "route": "GET /api/v1/vehicles/insurance-expiring",
      "test": "Unauthorized",
      "passed": true,
      "statusCode": 401,
      "duration": 14,
      "response": {
        "error": "Unauthorized"
      }
    },
    {
      "route": "GET /api/v1/vehicles/maintenance",
      "test": "List maintenance needed",
      "passed": true,
      "statusCode": 200,
      "duration": 1168,
      "response": []
    },
    {
      "route": "GET /api/v1/vehicles/maintenance",
      "test": "Unauthorized",
      "passed": true,
      "statusCode": 401,
      "duration": 20,
      "response": {
        "error": "Unauthorized"
      }
    }
  ],
  "timestamp": "2025-10-18T16:42:53.404Z",
  "testCredentials": {
    "userId": "user_34FOFYRxIVnRxiCtbD4N2RRqdKh",
    "orgId": "org_34EXxYF5pWSgjfzuoGlmcHA11aa",
    "email": "test-fleetcore-1760805749313@example.com"
  }
}
