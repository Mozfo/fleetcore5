generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// Table des organisations/tenants (remplace organization)
model adm_tenants {
  id                                              String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                                            String
  subdomain                                       String
  country_code                                    String        @db.VarChar(2)
  clerk_organization_id                           String?       @db.VarChar(255)
  vat_rate                                        Decimal?      @db.Decimal(5, 2)
  currency                                        String?       @default("EUR") @db.VarChar(3)
  timezone                                        String?       @default("Europe/Paris") @db.VarChar(50)
  metadata                                        Json          @default("{}")
  status                                          String        @default("active") @db.VarChar(50)
  deleted_at                                      DateTime?     @db.Timestamptz(6)
  deleted_by                                      String?       @db.Uuid
  deletion_reason                                 String?
  created_at                                      DateTime      @default(now()) @db.Timestamptz(6)
  updated_at                                      DateTime      @default(now()) @updatedAt @db.Timestamptz(6)
  created_by                                      String?       @db.Uuid
  updated_by                                      String?       @db.Uuid
  members                                         adm_members[]
  adm_members_adm_tenants_created_byToadm_members adm_members?  @relation("adm_tenants_created_byToadm_members", fields: [created_by], references: [id])
  adm_members_adm_tenants_deleted_byToadm_members adm_members?  @relation("adm_tenants_deleted_byToadm_members", fields: [deleted_by], references: [id])
  adm_members_adm_tenants_updated_byToadm_members adm_members?  @relation("adm_tenants_updated_byToadm_members", fields: [updated_by], references: [id])
  leads                                           crm_leads[]
  adm_roles                                       adm_roles[]
  adm_member_roles                                adm_member_roles[]
  adm_audit_logs                                  adm_audit_logs[]
  // adm_tenant_lifecycle_events                     adm_tenant_lifecycle_events[]
  // adm_invitations                                 adm_invitations[]
  // dir_car_makes                                   dir_car_makes[]
  // dir_car_models                                  dir_car_models[]
  // doc_documents                                   doc_documents[]

  @@index([country_code])
  @@index([deleted_at])
  @@index([created_by])
  @@index([metadata], map: "adm_tenants_metadata_gin_idx", type: Gin)
  @@index([updated_by])
}

/// Table des membres/utilisateurs (remplace member)
model adm_members {
  id                                                    String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  tenant_id                                             String        @db.Uuid
  email                                                 String        @db.Citext
  clerk_user_id                                         String        @db.VarChar(255)
  first_name                                            String?       @db.VarChar(100)
  last_name                                             String?       @db.VarChar(100)
  phone                                                 String?       @db.VarChar(50)
  role                                                  String        @default("member") @db.VarChar(50)
  metadata                                              Json          @default("{}")
  status                                                String        @default("active") @db.VarChar(50)
  deleted_at                                            DateTime?     @db.Timestamptz(6)
  deleted_by                                            String?       @db.Uuid
  deletion_reason                                       String?
  created_at                                            DateTime      @default(now()) @db.Timestamptz(6)
  updated_at                                            DateTime      @default(now()) @updatedAt @db.Timestamptz(6)
  last_login_at                                         DateTime?     @db.Timestamptz(6)
  created_by                                            String?       @db.Uuid
  updated_by                                            String?       @db.Uuid
  adm_members_adm_members_created_byToadm_members       adm_members?  @relation("adm_members_created_byToadm_members", fields: [created_by], references: [id])
  other_adm_members_adm_members_created_byToadm_members adm_members[] @relation("adm_members_created_byToadm_members")
  adm_members_adm_members_deleted_byToadm_members       adm_members?  @relation("adm_members_deleted_byToadm_members", fields: [deleted_by], references: [id])
  other_adm_members_adm_members_deleted_byToadm_members adm_members[] @relation("adm_members_deleted_byToadm_members")
  tenant                                                adm_tenants   @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  adm_members_adm_members_updated_byToadm_members       adm_members?  @relation("adm_members_updated_byToadm_members", fields: [updated_by], references: [id])
  other_adm_members_adm_members_updated_byToadm_members adm_members[] @relation("adm_members_updated_byToadm_members")
  adm_tenants_adm_tenants_created_byToadm_members       adm_tenants[] @relation("adm_tenants_created_byToadm_members")
  adm_tenants_adm_tenants_deleted_byToadm_members       adm_tenants[] @relation("adm_tenants_deleted_byToadm_members")
  adm_tenants_adm_tenants_updated_byToadm_members       adm_tenants[] @relation("adm_tenants_updated_byToadm_members")
  crm_leads_assigned_to                                 crm_leads[]   @relation("crm_leads_assigned_to")
  crm_leads_crm_leads_created_byToadm_members           crm_leads[]   @relation("crm_leads_created_byToadm_members")
  crm_leads_crm_leads_deleted_byToadm_members           crm_leads[]   @relation("crm_leads_deleted_byToadm_members")
  crm_leads_crm_leads_updated_byToadm_members           crm_leads[]   @relation("crm_leads_updated_byToadm_members")
  adm_roles_adm_roles_created_byToadm_members                             adm_roles[]                       @relation("adm_roles_created_byToadm_members")
  adm_roles_adm_roles_updated_byToadm_members                             adm_roles[]                       @relation("adm_roles_updated_byToadm_members")
  adm_roles_adm_roles_deleted_byToadm_members                             adm_roles[]                       @relation("adm_roles_deleted_byToadm_members")
  adm_member_roles_adm_member_roles_member                                adm_member_roles[]                @relation("adm_member_roles_member")
  adm_member_roles_adm_member_roles_created_byToadm_members               adm_member_roles[]                @relation("adm_member_roles_created_byToadm_members")
  adm_member_roles_adm_member_roles_updated_byToadm_members               adm_member_roles[]                @relation("adm_member_roles_updated_byToadm_members")
  adm_member_roles_adm_member_roles_deleted_byToadm_members               adm_member_roles[]                @relation("adm_member_roles_deleted_byToadm_members")
  adm_audit_logs_adm_audit_logs_performed_byToadm_members                 adm_audit_logs[]                  @relation("adm_audit_logs_performed_byToadm_members")
  adm_provider_employees_adm_provider_employees_created_byToadm_members   adm_provider_employees[]          @relation("adm_provider_employees_created_byToadm_members")
  adm_provider_employees_adm_provider_employees_updated_byToadm_members   adm_provider_employees[]          @relation("adm_provider_employees_updated_byToadm_members")
  adm_provider_employees_adm_provider_employees_deleted_byToadm_members   adm_provider_employees[]          @relation("adm_provider_employees_deleted_byToadm_members")
  // adm_tenant_lifecycle_events_created_byToadm_members                     adm_tenant_lifecycle_events[]     @relation("adm_tenant_lifecycle_events_created_byToadm_members")
  // adm_invitations_adm_invitations_inviterToadm_members                    adm_invitations[]                 @relation("adm_invitations_inviterToadm_members")
  // adm_invitations_adm_invitations_created_byToadm_members                 adm_invitations[]                 @relation("adm_invitations_created_byToadm_members")
  // adm_invitations_adm_invitations_updated_byToadm_members                 adm_invitations[]                 @relation("adm_invitations_updated_byToadm_members")
  // adm_invitations_adm_invitations_deleted_byToadm_members                 adm_invitations[]                 @relation("adm_invitations_deleted_byToadm_members")
  // dir_car_makes_dir_car_makes_created_byToadm_members                     dir_car_makes[]                   @relation("dir_car_makes_created_byToadm_members")
  // dir_car_makes_dir_car_makes_updated_byToadm_members                     dir_car_makes[]                   @relation("dir_car_makes_updated_byToadm_members")
  // dir_car_makes_dir_car_makes_deleted_byToadm_members                     dir_car_makes[]                   @relation("dir_car_makes_deleted_byToadm_members")
  // dir_car_models_dir_car_models_created_byToadm_members                   dir_car_models[]                  @relation("dir_car_models_created_byToadm_members")
  // dir_car_models_dir_car_models_updated_byToadm_members                   dir_car_models[]                  @relation("dir_car_models_updated_byToadm_members")
  // dir_car_models_dir_car_models_deleted_byToadm_members                   dir_car_models[]                  @relation("dir_car_models_deleted_byToadm_members")
  // dir_platforms_dir_platforms_created_byToadm_members                     dir_platforms[]                   @relation("dir_platforms_created_byToadm_members")
  // dir_platforms_dir_platforms_updated_byToadm_members                     dir_platforms[]                   @relation("dir_platforms_updated_byToadm_members")
  // dir_platforms_dir_platforms_deleted_byToadm_members                     dir_platforms[]                   @relation("dir_platforms_deleted_byToadm_members")
  // dir_country_regulations_dir_country_regulations_created_byToadm_members dir_country_regulations[]         @relation("dir_country_regulations_created_byToadm_members")
  // dir_country_regulations_dir_country_regulations_updated_byToadm_members dir_country_regulations[]         @relation("dir_country_regulations_updated_byToadm_members")
  // dir_country_regulations_dir_country_regulations_deleted_byToadm_members dir_country_regulations[]         @relation("dir_country_regulations_deleted_byToadm_members")
  // dir_vehicle_classes_dir_vehicle_classes_created_byToadm_members         dir_vehicle_classes[]             @relation("dir_vehicle_classes_created_byToadm_members")
  // dir_vehicle_classes_dir_vehicle_classes_updated_byToadm_members         dir_vehicle_classes[]             @relation("dir_vehicle_classes_updated_byToadm_members")
  // dir_vehicle_classes_dir_vehicle_classes_deleted_byToadm_members         dir_vehicle_classes[]             @relation("dir_vehicle_classes_deleted_byToadm_members")
  // doc_documents_doc_documents_created_byToadm_members                     doc_documents[]                   @relation("doc_documents_created_byToadm_members")
  // doc_documents_doc_documents_updated_byToadm_members                     doc_documents[]                   @relation("doc_documents_updated_byToadm_members")
  // doc_documents_doc_documents_deleted_byToadm_members                     doc_documents[]                   @relation("doc_documents_deleted_byToadm_members")

  @@index([tenant_id])
  @@index([deleted_at])
  @@index([created_by])
  @@index([metadata], map: "adm_members_metadata_gin_idx", type: Gin)
  @@index([updated_by])
}

/// Table des leads/prospects (remplace sys_demo_lead)
model crm_leads {
  id                                            String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  tenant_id                                     String?      @db.Uuid
  full_name                                     String       @db.VarChar(200)
  demo_company_name                             String?      @map("company_name") @db.VarChar(200)
  email                                         String       @db.Citext
  phone                                         String?      @db.VarChar(50)
  country_code                                  String       @db.VarChar(2)
  fleet_size                                    Int?
  current_software                              String?      @db.VarChar(200)
  message                                       String?
  status                                        String       @default("new") @db.VarChar(50)
  lead_source                                   String?      @db.VarChar(100)
  assigned_to                                   String?      @db.Uuid
  qualification_score                           Int?
  qualification_notes                           String?
  utm_source                                    String?      @db.VarChar(100)
  utm_medium                                    String?      @db.VarChar(100)
  utm_campaign                                  String?      @db.VarChar(100)
  metadata                                      Json         @default("{}")
  deleted_at                                    DateTime?    @db.Timestamptz(6)
  deleted_by                                    String?      @db.Uuid
  deletion_reason                               String?
  created_at                                    DateTime     @default(now()) @db.Timestamptz(6)
  updated_at                                    DateTime     @default(now()) @updatedAt @db.Timestamptz(6)
  notes                                         String?
  created_by                                    String?      @db.Uuid
  updated_by                                    String?      @db.Uuid
  assigned_to_member                            adm_members? @relation("crm_leads_assigned_to", fields: [assigned_to], references: [id])
  adm_members_crm_leads_created_byToadm_members adm_members? @relation("crm_leads_created_byToadm_members", fields: [created_by], references: [id])
  adm_members_crm_leads_deleted_byToadm_members adm_members? @relation("crm_leads_deleted_byToadm_members", fields: [deleted_by], references: [id])
  tenant                                        adm_tenants? @relation(fields: [tenant_id], references: [id])
  adm_members_crm_leads_updated_byToadm_members adm_members? @relation("crm_leads_updated_byToadm_members", fields: [updated_by], references: [id])

  @@index([email])
  @@index([country_code])
  @@index([created_at])
  @@index([tenant_id])
  @@index([assigned_to])
  @@index([created_by])
  @@index([deleted_at])
  @@index([metadata], map: "crm_leads_metadata_gin_idx", type: Gin)
  @@index([updated_by])
}

/// Table des rôles (fine-grained permissions)
model adm_roles {
  id                                               String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  tenant_id                                        String              @db.Uuid
  name                                             String              @db.VarChar(100)
  description                                      String?
  permissions                                      Json                @db.JsonB
  status                                           String              @default("active") @db.VarChar(50)
  deleted_at                                       DateTime?           @db.Timestamptz(6)
  deleted_by                                       String?             @db.Uuid
  deletion_reason                                  String?
  created_at                                       DateTime            @default(now()) @db.Timestamptz(6)
  updated_at                                       DateTime            @default(now()) @updatedAt @db.Timestamptz(6)
  created_by                                       String?             @db.Uuid
  updated_by                                       String?             @db.Uuid
  tenant                                           adm_tenants         @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  adm_members_adm_roles_created_byToadm_members    adm_members?        @relation("adm_roles_created_byToadm_members", fields: [created_by], references: [id])
  adm_members_adm_roles_updated_byToadm_members    adm_members?        @relation("adm_roles_updated_byToadm_members", fields: [updated_by], references: [id])
  adm_members_adm_roles_deleted_byToadm_members    adm_members?        @relation("adm_roles_deleted_byToadm_members", fields: [deleted_by], references: [id])
  member_roles                                     adm_member_roles[]

  @@unique([tenant_id, name, deleted_at])
  @@index([tenant_id])
  @@index([status])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([permissions], map: "adm_roles_permissions_gin_idx", type: Gin)
}

/// Table d'association membres-rôles (many-to-many)
model adm_member_roles {
  id                                                   String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  tenant_id                                            String        @db.Uuid
  member_id                                            String        @db.Uuid
  role_id                                              String        @db.Uuid
  deleted_at                                           DateTime?     @db.Timestamptz(6)
  deleted_by                                           String?       @db.Uuid
  deletion_reason                                      String?
  created_at                                           DateTime      @default(now()) @db.Timestamptz(6)
  updated_at                                           DateTime      @default(now()) @updatedAt @db.Timestamptz(6)
  created_by                                           String?       @db.Uuid
  updated_by                                           String?       @db.Uuid
  tenant                                               adm_tenants   @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  member                                               adm_members   @relation("adm_member_roles_member", fields: [member_id], references: [id], onDelete: Cascade)
  role                                                 adm_roles     @relation(fields: [role_id], references: [id], onDelete: Cascade)
  adm_members_adm_member_roles_created_byToadm_members adm_members?  @relation("adm_member_roles_created_byToadm_members", fields: [created_by], references: [id])
  adm_members_adm_member_roles_updated_byToadm_members adm_members?  @relation("adm_member_roles_updated_byToadm_members", fields: [updated_by], references: [id])
  adm_members_adm_member_roles_deleted_byToadm_members adm_members?  @relation("adm_member_roles_deleted_byToadm_members", fields: [deleted_by], references: [id])

  @@unique([tenant_id, member_id, role_id, deleted_at])
  @@index([tenant_id])
  @@index([member_id])
  @@index([role_id])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
}

/// Table des logs d'audit (traçabilité complète)
model adm_audit_logs {
  id                                                 String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  tenant_id                                          String       @db.Uuid
  entity_type                                        String       @db.VarChar(100)
  entity_id                                          String       @db.Uuid
  action                                             String       @db.VarChar(50)
  performed_by                                       String?      @db.Uuid
  performed_by_clerk_id                              String?      @db.VarChar(255)
  ip_address                                         String?      @db.VarChar(45)
  user_agent                                         String?
  snapshot                                           Json         @db.JsonB
  changes                                            Json?        @db.JsonB
  reason                                             String?
  metadata                                           Json         @default("{}") @db.JsonB
  created_at                                         DateTime     @default(now()) @db.Timestamptz(6)
  tenant                                             adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  adm_members_adm_audit_logs_performed_byToadm_members adm_members? @relation("adm_audit_logs_performed_byToadm_members", fields: [performed_by], references: [id])

  @@index([tenant_id])
  @@index([entity_type])
  @@index([entity_id])
  @@index([action])
  @@index([performed_by])
  @@index([created_at])
  @@index([snapshot], map: "adm_audit_logs_snapshot_gin_idx", type: Gin)
  @@index([changes], map: "adm_audit_logs_changes_gin_idx", type: Gin)
  @@index([metadata], map: "adm_audit_logs_metadata_gin_idx", type: Gin)
}

/// Table des employés du provider (FleetCore admin users)
model adm_provider_employees {
  id                                                           String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email                                                        String       @unique @db.Citext
  clerk_user_id                                                String       @unique @db.VarChar(255)
  first_name                                                   String?      @db.VarChar(100)
  last_name                                                    String?      @db.VarChar(100)
  phone                                                        String?      @db.VarChar(50)
  role                                                         String       @default("support") @db.VarChar(50)
  permissions                                                  Json         @default("{}") @db.JsonB
  status                                                       String       @default("active") @db.VarChar(50)
  metadata                                                     Json         @default("{}") @db.JsonB
  deleted_at                                                   DateTime?    @db.Timestamptz(6)
  deleted_by                                                   String?      @db.Uuid
  deletion_reason                                              String?
  created_at                                                   DateTime     @default(now()) @db.Timestamptz(6)
  updated_at                                                   DateTime     @default(now()) @updatedAt @db.Timestamptz(6)
  created_by                                                   String?      @db.Uuid
  updated_by                                                   String?      @db.Uuid
  adm_members_adm_provider_employees_created_byToadm_members   adm_members? @relation("adm_provider_employees_created_byToadm_members", fields: [created_by], references: [id])
  adm_members_adm_provider_employees_updated_byToadm_members   adm_members? @relation("adm_provider_employees_updated_byToadm_members", fields: [updated_by], references: [id])
  adm_members_adm_provider_employees_deleted_byToadm_members   adm_members? @relation("adm_provider_employees_deleted_byToadm_members", fields: [deleted_by], references: [id])

  @@index([status])
  @@index([role])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([permissions], map: "adm_provider_employees_permissions_gin_idx", type: Gin)
  @@index([metadata], map: "adm_provider_employees_metadata_gin_idx", type: Gin)
}
