generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// Table des organisations/tenants
model adm_tenants {
  id                    String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                  String
  subdomain             String?       @unique @db.VarChar(100)
  country_code          String        @db.VarChar(2)
  clerk_organization_id String?
  vat_rate              Decimal?      @db.Decimal(5, 2)
  default_currency      String        @default("EUR") @db.Char(3)
  timezone              String        @default("Europe/Paris")
  created_at            DateTime      @default(now()) @db.Timestamptz(6)
  updated_at            DateTime      @default(now()) @updatedAt @db.Timestamptz(6)
  deleted_at            DateTime?     @db.Timestamptz(6)

  members               adm_members[]
  support_tickets       sup_tickets[]
  customer_feedback     sup_customer_feedback[]
  roles                 adm_roles[]
  member_roles          adm_member_roles[]
  audit_logs            adm_audit_logs[]
  lifecycle_events      adm_tenant_lifecycle_events[]
  car_makes             dir_car_makes[]
  car_models            dir_car_models[]
  documents             doc_documents[]
  drivers               rid_drivers[]
  vehicles              flt_vehicles[]
  vehicle_assignments   flt_vehicle_assignments[]
  driver_documents      rid_driver_documents[]
  driver_cooperation_terms rid_driver_cooperation_terms[]
  driver_requests       rid_driver_requests[]
  driver_performances   rid_driver_performances[]
  driver_blacklists     rid_driver_blacklists[]
  driver_training       rid_driver_training[]
  shifts                sch_shifts[]
  maintenance_schedules sch_maintenance_schedules[]
  goals                 sch_goals[]
  tasks                 sch_tasks[]
  trips                 trp_trips[]
  platform_accounts     trp_platform_accounts[]
  settlements           trp_settlements[]
  client_invoices       trp_client_invoices[]
  financial_accounts    fin_accounts[]
  financial_transactions fin_transactions[]
  driver_payment_batches fin_driver_payment_batches[]
  driver_payments       fin_driver_payments[]
  toll_transactions     fin_toll_transactions[]
  traffic_fines         fin_traffic_fines[]
  revenue_imports       rev_revenue_imports[]
  driver_revenues       rev_driver_revenues[]
  reconciliations       rev_reconciliations[]
  vehicle_events        flt_vehicle_events[]
  vehicle_maintenance   flt_vehicle_maintenance[]
  vehicle_expenses      flt_vehicle_expenses[]
  vehicle_insurances    flt_vehicle_insurances[]
  tenant_subscriptions  bil_tenant_subscriptions[]
  tenant_usage_metrics  bil_tenant_usage_metrics[]
  tenant_invoices       bil_tenant_invoices[]
  payment_methods       bil_payment_methods[]

  @@index([country_code])
  @@index([default_currency])
  @@index([clerk_organization_id])
  @@index([deleted_at])
}

/// Table des membres/utilisateurs
model adm_members {
  id              String        @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String        @db.Uuid
  email           String        @db.Citext
  clerk_user_id   String        @db.VarChar(255)
  first_name      String?       @db.VarChar(100)
  last_name       String?       @db.VarChar(100)
  phone           String?       @db.VarChar(50)
  role            String        @default("member") @db.VarChar(50)
  last_login_at   DateTime?     @db.Timestamptz(6)
  metadata        Json          @default("{}") @db.JsonB
  status          String        @default("active") @db.VarChar(50)
  created_at      DateTime      @default(now()) @db.Timestamptz(6)
  created_by      String?       @db.Uuid
  updated_at      DateTime      @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?       @db.Uuid
  deleted_at      DateTime?     @db.Timestamptz(6)
  deleted_by      String?       @db.Uuid
  deletion_reason String?

  tenant       adm_tenants        @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  member_roles adm_member_roles[] @relation("member_roles")
  audit_logs   adm_audit_logs[]

  // ADM members self-referencing audit relations
  members_created       adm_members[]       @relation("member_created_by")
  members_updated       adm_members[]       @relation("member_updated_by")
  members_deleted       adm_members[]       @relation("member_deleted_by")
  created_by_member     adm_members?        @relation("member_created_by", fields: [created_by], references: [id], onDelete: SetNull)
  updated_by_member     adm_members?        @relation("member_updated_by", fields: [updated_by], references: [id], onDelete: SetNull)
  deleted_by_member     adm_members?        @relation("member_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull)

  // ADM member_roles audit relations
  member_roles_created  adm_member_roles[]  @relation("member_role_created_by")
  member_roles_updated  adm_member_roles[]  @relation("member_role_updated_by")
  member_roles_deleted  adm_member_roles[]  @relation("member_role_deleted_by")

  // ADM roles audit relations
  roles_created         adm_roles[]         @relation("role_created_by")
  roles_updated         adm_roles[]         @relation("role_updated_by")
  roles_deleted         adm_roles[]         @relation("role_deleted_by")

  // FLT vehicle events audit relations
  vehicle_events_created          flt_vehicle_events[]       @relation("vehicle_event_created_by")
  vehicle_events_updated          flt_vehicle_events[]       @relation("vehicle_event_updated_by")
  vehicle_events_deleted          flt_vehicle_events[]       @relation("vehicle_event_deleted_by")

  // FLT vehicle maintenance audit relations
  vehicle_maintenance_created flt_vehicle_maintenance[] @relation("vehicle_maintenance_created_by")
  vehicle_maintenance_updated flt_vehicle_maintenance[] @relation("vehicle_maintenance_updated_by")

  // FLT vehicle expenses audit relations
  vehicle_expenses_created        flt_vehicle_expenses[]     @relation("vehicle_expense_created_by")
  vehicle_expenses_updated        flt_vehicle_expenses[]     @relation("vehicle_expense_updated_by")
  vehicle_expenses_deleted        flt_vehicle_expenses[]     @relation("vehicle_expense_deleted_by")

  // FLT vehicle insurances audit relations
  vehicle_insurances_created      flt_vehicle_insurances[]   @relation("vehicle_insurance_created_by")
  vehicle_insurances_updated      flt_vehicle_insurances[]   @relation("vehicle_insurance_updated_by")
  vehicle_insurances_deleted      flt_vehicle_insurances[]   @relation("vehicle_insurance_deleted_by")

  // FLT vehicles audit relations
  vehicles_created                flt_vehicles[]             @relation("vehicle_created_by")
  vehicles_updated                flt_vehicles[]             @relation("vehicle_updated_by")
  vehicles_deleted                flt_vehicles[]             @relation("vehicle_deleted_by")

  // FLT vehicle assignments audit relations
  vehicle_assignments_created     flt_vehicle_assignments[]  @relation("assignment_created_by")
  vehicle_assignments_updated     flt_vehicle_assignments[]  @relation("assignment_updated_by")
  vehicle_assignments_deleted     flt_vehicle_assignments[]  @relation("assignment_deleted_by")

  // RID driver documents relations
  driver_documents_verified       rid_driver_documents[]     @relation("driver_document_verified_by")
  driver_documents_created        rid_driver_documents[]     @relation("driver_document_created_by")
  driver_documents_updated        rid_driver_documents[]     @relation("driver_document_updated_by")
  driver_documents_deleted        rid_driver_documents[]     @relation("driver_document_deleted_by")

  // RID driver cooperation terms relations
  cooperation_terms_created       rid_driver_cooperation_terms[] @relation("cooperation_terms_created_by")
  cooperation_terms_updated       rid_driver_cooperation_terms[] @relation("cooperation_terms_updated_by")
  cooperation_terms_deleted       rid_driver_cooperation_terms[] @relation("cooperation_terms_deleted_by")

  // RID driver requests relations
  driver_requests_created         rid_driver_requests[]          @relation("driver_request_created_by")
  driver_requests_updated         rid_driver_requests[]          @relation("driver_request_updated_by")
  driver_requests_deleted         rid_driver_requests[]          @relation("driver_request_deleted_by")

  // RID driver performances relations
  driver_performances_created     rid_driver_performances[]      @relation("driver_performance_created_by")
  driver_performances_updated     rid_driver_performances[]      @relation("driver_performance_updated_by")
  driver_performances_deleted     rid_driver_performances[]      @relation("driver_performance_deleted_by")

  // RID driver blacklists relations
  driver_blacklists_created       rid_driver_blacklists[]        @relation("driver_blacklist_created_by")
  driver_blacklists_updated       rid_driver_blacklists[]        @relation("driver_blacklist_updated_by")
  driver_blacklists_deleted       rid_driver_blacklists[]        @relation("driver_blacklist_deleted_by")

  // RID driver training relations
  driver_training_created         rid_driver_training[]          @relation("driver_training_created_by")
  driver_training_updated         rid_driver_training[]          @relation("driver_training_updated_by")
  driver_training_deleted         rid_driver_training[]          @relation("driver_training_deleted_by")

  // SCH shifts relations
  shifts_created                  sch_shifts[]                   @relation("shift_created_by")
  shifts_updated                  sch_shifts[]                   @relation("shift_updated_by")
  shifts_deleted                  sch_shifts[]                   @relation("shift_deleted_by")

  // SCH maintenance schedules relations
  maintenance_schedules_created   sch_maintenance_schedules[]    @relation("maintenance_schedule_created_by")
  maintenance_schedules_updated   sch_maintenance_schedules[]    @relation("maintenance_schedule_updated_by")
  maintenance_schedules_deleted   sch_maintenance_schedules[]    @relation("maintenance_schedule_deleted_by")

  // SCH goals relations
  goals_created                   sch_goals[]                    @relation("goal_created_by")
  goals_updated                   sch_goals[]                    @relation("goal_updated_by")
  goals_deleted                   sch_goals[]                    @relation("goal_deleted_by")

  // SCH tasks relations
  tasks_created                   sch_tasks[]                    @relation("task_created_by")
  tasks_updated                   sch_tasks[]                    @relation("task_updated_by")
  tasks_deleted                   sch_tasks[]                    @relation("task_deleted_by")

  // TRP platform accounts relations
  platform_accounts_created       trp_platform_accounts[]        @relation("platform_account_created_by")
  platform_accounts_updated       trp_platform_accounts[]        @relation("platform_account_updated_by")
  platform_accounts_deleted       trp_platform_accounts[]        @relation("platform_account_deleted_by")

  // TRP settlements relations
  settlements_created             trp_settlements[]              @relation("settlement_created_by")
  settlements_updated             trp_settlements[]              @relation("settlement_updated_by")
  settlements_deleted             trp_settlements[]              @relation("settlement_deleted_by")

  // TRP client invoices relations
  client_invoices_created         trp_client_invoices[]          @relation("client_invoice_created_by")
  client_invoices_updated         trp_client_invoices[]          @relation("client_invoice_updated_by")
  client_invoices_deleted         trp_client_invoices[]          @relation("client_invoice_deleted_by")

  // FIN accounts relations
  financial_accounts_created      fin_accounts[]                 @relation("fin_account_created_by")
  financial_accounts_updated      fin_accounts[]                 @relation("fin_account_updated_by")
  financial_accounts_deleted      fin_accounts[]                 @relation("fin_account_deleted_by")
  financial_transactions_created  fin_transactions[]             @relation("fin_transaction_created_by")
  financial_transactions_updated  fin_transactions[]             @relation("fin_transaction_updated_by")
  financial_transactions_deleted  fin_transactions[]             @relation("fin_transaction_deleted_by")
  driver_payment_batches_created  fin_driver_payment_batches[]   @relation("fin_driver_payment_batch_created_by")
  driver_payment_batches_updated  fin_driver_payment_batches[]   @relation("fin_driver_payment_batch_updated_by")
  driver_payment_batches_deleted  fin_driver_payment_batches[]   @relation("fin_driver_payment_batch_deleted_by")
  driver_payments_created         fin_driver_payments[]          @relation("fin_driver_payment_created_by")
  driver_payments_updated         fin_driver_payments[]          @relation("fin_driver_payment_updated_by")
  driver_payments_deleted         fin_driver_payments[]          @relation("fin_driver_payment_deleted_by")
  toll_transactions_created       fin_toll_transactions[]        @relation("fin_toll_transaction_created_by")
  toll_transactions_updated       fin_toll_transactions[]        @relation("fin_toll_transaction_updated_by")
  toll_transactions_deleted       fin_toll_transactions[]        @relation("fin_toll_transaction_deleted_by")
  traffic_fines_created           fin_traffic_fines[]            @relation("fin_traffic_fine_created_by")
  traffic_fines_updated           fin_traffic_fines[]            @relation("fin_traffic_fine_updated_by")
  traffic_fines_deleted           fin_traffic_fines[]            @relation("fin_traffic_fine_deleted_by")
  revenue_imports_created         rev_revenue_imports[]          @relation("rev_revenue_import_created_by")
  revenue_imports_updated         rev_revenue_imports[]          @relation("rev_revenue_import_updated_by")
  revenue_imports_deleted         rev_revenue_imports[]          @relation("rev_revenue_import_deleted_by")
  driver_revenues_created         rev_driver_revenues[]          @relation("rev_driver_revenue_created_by")
  driver_revenues_updated         rev_driver_revenues[]          @relation("rev_driver_revenue_updated_by")
  driver_revenues_deleted         rev_driver_revenues[]          @relation("rev_driver_revenue_deleted_by")
  reconciliations_created         rev_reconciliations[]          @relation("rev_reconciliation_created_by")
  reconciliations_updated         rev_reconciliations[]          @relation("rev_reconciliation_updated_by")
  reconciliations_deleted         rev_reconciliations[]          @relation("rev_reconciliation_deleted_by")

  // Support tickets relations
  tickets_created                 sup_tickets[]                  @relation("ticket_created_by")
  tickets_updated                 sup_tickets[]                  @relation("ticket_updated_by")
  tickets_deleted                 sup_tickets[]                  @relation("ticket_deleted_by")
  ticket_messages_created         sup_ticket_messages[]          @relation("ticket_message_created_by")
  ticket_messages_updated         sup_ticket_messages[]          @relation("ticket_message_updated_by")
  ticket_messages_deleted         sup_ticket_messages[]          @relation("ticket_message_deleted_by")

  // SUP customer feedback audit relations
  feedback_created                sup_customer_feedback[]        @relation("feedback_created_by")
  feedback_updated                sup_customer_feedback[]        @relation("feedback_updated_by")
  feedback_deleted                sup_customer_feedback[]        @relation("feedback_deleted_by")

  @@unique([tenant_id, email, deleted_at])
  @@unique([tenant_id, clerk_user_id, deleted_at])
  @@index([tenant_id])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([last_login_at])
  @@index([status], map: "adm_members_status_active_idx")
  @@index([metadata], type: Gin)
  @@map("adm_members")
}

/// Table interne FleetCore - prospects/leads (pas de tenant_id)
model crm_leads {
  id                  String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  full_name           String
  demo_company_name   String?
  email               String
  phone               String?
  country_code        String?   @db.VarChar(2)
  fleet_size          String?   @db.VarChar(50)
  current_software    String?   @db.VarChar(255)
  message             String?   @db.Text
  status              String    @default("new") // Enum: new, contacted, qualified, disqualified, converted
  assigned_to         String?   @db.Uuid
  qualification_score Int?
  qualification_notes String?   @db.Text
  qualified_date      DateTime? @db.Timestamptz(6)
  converted_date      DateTime? @db.Timestamptz(6)
  utm_source          String?   @db.VarChar(255)
  utm_medium          String?   @db.VarChar(255)
  utm_campaign        String?   @db.VarChar(255)
  metadata            Json      @default("{}") @db.JsonB
  created_at          DateTime  @default(now()) @db.Timestamptz(6)
  created_by          String?   @db.Uuid
  updated_at          DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by          String?   @db.Uuid
  deleted_at          DateTime? @db.Timestamptz(6)
  deleted_by          String?   @db.Uuid
  deletion_reason     String?

  assigned_to_employee adm_provider_employees? @relation("lead_assigned_to", fields: [assigned_to], references: [id], onDelete: SetNull)
  created_by_employee  adm_provider_employees? @relation("lead_created_by", fields: [created_by], references: [id], onDelete: SetNull)
  updated_by_employee  adm_provider_employees? @relation("lead_updated_by", fields: [updated_by], references: [id], onDelete: SetNull)
  deleted_by_employee  adm_provider_employees? @relation("lead_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull)

  opportunities crm_opportunities[]
  contracts     crm_contracts[]

  @@unique([email, deleted_at])
  @@index([assigned_to])
  @@index([status])
  @@index([country_code])
  @@index([created_at(sort: Desc)])
  @@index([deleted_at])
  @@index([metadata], type: Gin)
}

/// Table des rôles
model adm_roles {
  id              String               @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String               @db.Uuid
  name            String               @db.VarChar(100)
  description     String?
  permissions     Json                 @default("{}") @db.JsonB
  status          String               @default("active") @db.VarChar(50)
  created_at      DateTime             @default(now()) @db.Timestamptz(6)
  created_by      String?              @db.Uuid
  updated_at      DateTime             @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?              @db.Uuid
  deleted_at      DateTime?            @db.Timestamptz(6)
  deleted_by      String?              @db.Uuid
  deletion_reason String?

  tenant               adm_tenants          @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  member_roles         adm_member_roles[]
  created_by_member    adm_members?         @relation("role_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member    adm_members?         @relation("role_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member    adm_members?         @relation("role_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([permissions], type: Gin)
}

/// Association membres-rôles (many-to-many)
model adm_member_roles {
  id              String      @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String      @db.Uuid
  member_id       String      @db.Uuid
  role_id         String      @db.Uuid
  assigned_at     DateTime    @default(now()) @db.Timestamptz(6)
  created_at      DateTime    @default(now()) @db.Timestamptz(6)
  created_by      String?     @db.Uuid
  updated_at      DateTime    @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?     @db.Uuid
  deleted_at      DateTime?   @db.Timestamptz(6)
  deleted_by      String?     @db.Uuid
  deletion_reason String?

  tenant               adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  member               adm_members  @relation("member_roles", fields: [member_id], references: [id], onDelete: Cascade)
  role                 adm_roles    @relation(fields: [role_id], references: [id], onDelete: Cascade)
  created_by_member    adm_members? @relation("member_role_created_by", fields: [created_by], references: [id], onDelete: SetNull)
  updated_by_member    adm_members? @relation("member_role_updated_by", fields: [updated_by], references: [id], onDelete: SetNull)
  deleted_by_member    adm_members? @relation("member_role_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull)

  @@unique([tenant_id, member_id, role_id, deleted_at])
  @@index([tenant_id])
  @@index([member_id])
  @@index([role_id])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@map("adm_member_roles")
}

/// Journal d'audit immuable (pas de soft-delete ni de champs d'audit)
model adm_audit_logs {
  id         String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id  String    @db.Uuid
  member_id  String?   @db.Uuid
  entity     String    @db.VarChar(50)
  entity_id  String    @db.Uuid
  action     String    @db.VarChar(50)
  changes    Json?     @db.JsonB
  ip_address String?   @db.VarChar(45)
  user_agent String?
  timestamp  DateTime  @default(now()) @db.Timestamptz(6)

  tenant adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  member adm_members? @relation(fields: [member_id], references: [id], onDelete: SetNull)

  @@index([tenant_id, entity, entity_id])
  @@index([tenant_id])
  @@index([timestamp(sort: Desc)])
  @@index([changes], type: Gin)
  @@map("adm_audit_logs")
}

/// Table des employés du fournisseur SaaS (FleetCore)
model adm_provider_employees {
  id              String                         @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  clerk_user_id   String                         @db.VarChar(255)
  name            String                         @db.VarChar(100)
  email           String                         @db.VarChar(255)
  department      String?                        @db.VarChar(50)
  title           String?                        @db.VarChar(50)
  permissions     Json?                          @db.JsonB
  status          String                         @default("active") @db.VarChar(50)
  created_at      DateTime                       @default(now()) @db.Timestamptz(6)
  created_by      String?                        @db.Uuid
  updated_at      DateTime                       @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?                        @db.Uuid
  deleted_at      DateTime?                      @db.Timestamptz(6)
  deleted_by      String?                        @db.Uuid
  deletion_reason String?

  lifecycle_events              adm_tenant_lifecycle_events[]
  billing_plans_created         bil_billing_plans[]           @relation("billing_plan_created_by")
  billing_plans_updated         bil_billing_plans[]           @relation("billing_plan_updated_by")
  billing_plans_deleted         bil_billing_plans[]           @relation("billing_plan_deleted_by")
  tenant_subscriptions_created  bil_tenant_subscriptions[]    @relation("tenant_subscription_created_by")
  tenant_subscriptions_updated  bil_tenant_subscriptions[]    @relation("tenant_subscription_updated_by")
  tenant_subscriptions_deleted  bil_tenant_subscriptions[]    @relation("tenant_subscription_deleted_by")
  usage_metrics_created         bil_tenant_usage_metrics[]    @relation("usage_metric_created_by")
  usage_metrics_updated         bil_tenant_usage_metrics[]    @relation("usage_metric_updated_by")
  usage_metrics_deleted         bil_tenant_usage_metrics[]    @relation("usage_metric_deleted_by")
  tenant_invoices_created       bil_tenant_invoices[]         @relation("tenant_invoice_created_by")
  tenant_invoices_updated       bil_tenant_invoices[]         @relation("tenant_invoice_updated_by")
  tenant_invoices_deleted       bil_tenant_invoices[]         @relation("tenant_invoice_deleted_by")
  invoice_lines_created         bil_tenant_invoice_lines[]    @relation("invoice_line_created_by")
  invoice_lines_updated         bil_tenant_invoice_lines[]    @relation("invoice_line_updated_by")
  invoice_lines_deleted         bil_tenant_invoice_lines[]    @relation("invoice_line_deleted_by")
  payment_methods_created       bil_payment_methods[]         @relation("payment_method_created_by")
  payment_methods_updated       bil_payment_methods[]         @relation("payment_method_updated_by")
  payment_methods_deleted       bil_payment_methods[]         @relation("payment_method_deleted_by")
  tickets_assigned              sup_tickets[]                 @relation("ticket_assigned_to")
  created_by_employee           adm_provider_employees?       @relation("employee_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_employee           adm_provider_employees?       @relation("employee_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_employee           adm_provider_employees?       @relation("employee_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  employees_created             adm_provider_employees[]      @relation("employee_created_by")
  employees_updated             adm_provider_employees[]      @relation("employee_updated_by")
  employees_deleted             adm_provider_employees[]      @relation("employee_deleted_by")

  // CRM leads relations
  leads_assigned                crm_leads[]                   @relation("lead_assigned_to")
  leads_created                 crm_leads[]                   @relation("lead_created_by")
  leads_updated                 crm_leads[]                   @relation("lead_updated_by")
  leads_deleted                 crm_leads[]                   @relation("lead_deleted_by")

  // CRM opportunities relations
  opportunities_assigned        crm_opportunities[]           @relation("opportunity_assigned_to")
  opportunities_created         crm_opportunities[]           @relation("opportunity_created_by")
  opportunities_updated         crm_opportunities[]           @relation("opportunity_updated_by")
  opportunities_deleted         crm_opportunities[]           @relation("opportunity_deleted_by")

  // CRM contracts relations
  contracts_created             crm_contracts[]               @relation("contract_created_by")
  contracts_updated             crm_contracts[]               @relation("contract_updated_by")
  contracts_deleted             crm_contracts[]               @relation("contract_deleted_by")

  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([permissions], type: Gin)
}

/// Table des événements du cycle de vie des tenants
model adm_tenant_lifecycle_events {
  id              String                  @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String                  @db.Uuid
  event_type      String                  @db.VarChar(50)
  performed_by    String?                 @db.Uuid
  effective_date  DateTime?               @db.Date
  description     String?
  created_at      DateTime                @default(now()) @db.Timestamptz(6)

  tenant                  adm_tenants             @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  performed_by_employee   adm_provider_employees? @relation(fields: [performed_by], references: [id], onDelete: SetNull)

  @@index([tenant_id, event_type])
  @@index([tenant_id])
  @@index([event_type])
  @@index([effective_date(sort: Desc)])
}

/// Table des marques de véhicules (globales ou par tenant)
model dir_car_makes {
  id         String           @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id  String?          @db.Uuid
  name       String
  created_at DateTime         @default(now()) @db.Timestamptz(6)
  updated_at DateTime         @default(now()) @updatedAt @db.Timestamptz(6)

  tenant     adm_tenants?     @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  models     dir_car_models[]
  vehicles   flt_vehicles[]

  @@unique([tenant_id, name])
  @@index([tenant_id])
  @@index([created_at])
  @@index([updated_at])
}

/// Table des modèles de véhicules (globaux ou par tenant)
model dir_car_models {
  id               String               @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id        String?              @db.Uuid
  make_id          String               @db.Uuid
  name             String
  vehicle_class_id String?              @db.Uuid
  created_at       DateTime             @default(now()) @db.Timestamptz(6)
  updated_at       DateTime             @default(now()) @updatedAt @db.Timestamptz(6)

  tenant           adm_tenants?         @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  make             dir_car_makes        @relation(fields: [make_id], references: [id], onDelete: Cascade)
  vehicle_class    dir_vehicle_classes? @relation(fields: [vehicle_class_id], references: [id], onDelete: SetNull, onUpdate: Cascade)
  vehicles         flt_vehicles[]

  @@unique([tenant_id, make_id, name])
  @@index([tenant_id])
  @@index([make_id])
  @@index([vehicle_class_id])
  @@index([created_at])
  @@index([updated_at])
}

/// Table des plateformes VTC (Uber, Bolt, etc.) - globale provider
model dir_platforms {
  id         String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  name       String    @unique
  api_config Json?     @db.JsonB
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @updatedAt @db.Timestamptz(6)

  trips             trp_trips[]
  platform_accounts trp_platform_accounts[]

  @@index([api_config], type: Gin)
}

/// Table des réglementations par pays (référence globale)
model dir_country_regulations {
  country_code      String                 @id @db.Char(2)
  vehicle_max_age   Int?
  min_vehicle_class String?
  requires_vtc_card Boolean                @default(false)
  min_fare_per_trip Decimal?               @db.Decimal(10, 2)
  min_fare_per_km   Decimal?               @db.Decimal(10, 2)
  min_fare_per_hour Decimal?               @db.Decimal(10, 2)
  vat_rate          Decimal?               @db.Decimal(5, 2)
  currency          String                 @db.Char(3)
  timezone          String
  created_at        DateTime               @default(now()) @db.Timestamptz(6)
  updated_at        DateTime               @default(now()) @updatedAt @db.Timestamptz(6)

  vehicle_classes   dir_vehicle_classes[]

  @@index([currency])
  @@index([timezone])
}

/// Table des classes de véhicules par pays (référence globale)
model dir_vehicle_classes {
  id           String   @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  country_code String   @db.Char(2)
  name         String
  description  String?
  max_age      Int?
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  updated_at   DateTime @default(now()) @updatedAt @db.Timestamptz(6)

  country    dir_country_regulations @relation(fields: [country_code], references: [country_code], onDelete: Cascade)
  car_models dir_car_models[]

  @@unique([country_code, name])
  @@index([country_code])
  @@index([created_at])
  @@index([updated_at])
}

/// Table polymorphique des documents (permis, licences, assurances, etc.)
model doc_documents {
  id            String   @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id     String   @db.Uuid
  entity_type   String   // flt_vehicle, rid_driver, adm_member, contract
  entity_id     String   @db.Uuid
  document_type String   // registration, insurance, visa, residence_visa, emirates_id, platform_approval, other
  file_url      String
  issue_date    DateTime? @db.Date
  expiry_date   DateTime? @db.Date
  verified      Boolean  @default(false)
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @updatedAt @db.Timestamptz(6)

  tenant           adm_tenants             @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  driver_documents rid_driver_documents[]

  @@index([tenant_id, entity_type, entity_id], map: "doc_documents_tenant_entity_idx")
  @@index([tenant_id])
  @@index([tenant_id, document_type], map: "doc_documents_tenant_document_type_idx")
  @@index([expiry_date])
  @@index([entity_type])
  @@index([entity_id])
  @@index([document_type])
  @@index([created_at])
  @@index([updated_at])
}

/// Table des chauffeurs (drivers domain)
model rid_drivers {
  id                  String                           @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id           String                           @db.Uuid
  first_name          String
  last_name           String
  email               String
  phone               String
  license_number      String
  license_issue_date  DateTime?                        @db.Date
  license_expiry_date DateTime?                        @db.Date
  professional_card_no String?
  professional_expiry DateTime?                        @db.Date
  driver_status       String                           @default("active") @db.VarChar(50)
  rating              Decimal?                         @db.Decimal
  notes               String?
  created_at          DateTime                         @default(now()) @db.Timestamptz(6)
  updated_at          DateTime                         @default(now()) @updatedAt @db.Timestamptz(6)
  deleted_at          DateTime?                        @db.Timestamptz(6)

  tenant              adm_tenants                      @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  trips               trp_trips[]
  vehicle_expenses    flt_vehicle_expenses[]
  vehicle_assignments flt_vehicle_assignments[]
  driver_documents    rid_driver_documents[]
  cooperation_terms   rid_driver_cooperation_terms[]
  driver_requests     rid_driver_requests[]
  driver_performances rid_driver_performances[]
  driver_blacklists   rid_driver_blacklists[]
  driver_training     rid_driver_training[]
  shifts              sch_shifts[]
  driver_payments     fin_driver_payments[]
  toll_transactions   fin_toll_transactions[]
  traffic_fines       fin_traffic_fines[]
  driver_revenues     rev_driver_revenues[]

  @@index([tenant_id])
  @@index([first_name])
  @@index([last_name])
  @@index([phone])
  @@index([email])
  @@index([license_number])
  @@index([driver_status])
  @@index([deleted_at])
  @@index([created_at(sort: Desc)])
  @@map("rid_drivers")
}

/// Table des documents chauffeurs
model rid_driver_documents {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  driver_id       String    @db.Uuid
  document_id     String    @db.Uuid
  document_type   String
  expiry_date     DateTime? @db.Date
  verified        Boolean   @default(false)
  verified_by     String?   @db.Uuid
  verified_at     DateTime? @db.Timestamptz(6)
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant            adm_tenants     @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver            rid_drivers     @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  document          doc_documents   @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  verified_by_member adm_members?   @relation("driver_document_verified_by", fields: [verified_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  created_by_member adm_members?    @relation("driver_document_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members?    @relation("driver_document_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members?    @relation("driver_document_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([driver_id])
  @@index([document_id])
  @@index([document_type])
  @@index([expiry_date])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
}

/// Table des termes de coopération chauffeurs
model rid_driver_cooperation_terms {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  driver_id       String    @db.Uuid
  terms_version   String
  accepted_at     DateTime? @db.Timestamptz(6)
  effective_date  DateTime? @db.Date
  expiry_date     DateTime? @db.Date
  status          String    @default("pending")
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver            rid_drivers  @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("cooperation_terms_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("cooperation_terms_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("cooperation_terms_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([driver_id])
  @@index([terms_version])
  @@index([accepted_at])
  @@index([effective_date])
  @@index([expiry_date])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("rid_driver_cooperation_terms")
}

/// Table des demandes chauffeurs
model rid_driver_requests {
  id               String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id        String    @db.Uuid
  driver_id        String    @db.Uuid
  request_type     String
  request_date     DateTime  @db.Date
  details          Json      @default("{}") @db.JsonB
  status           String    @default("pending")
  resolution_notes String?
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  created_by       String?   @db.Uuid
  updated_at       DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by       String?   @db.Uuid
  deleted_at       DateTime? @db.Timestamptz(6)
  deleted_by       String?   @db.Uuid
  deletion_reason  String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver            rid_drivers  @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("driver_request_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("driver_request_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("driver_request_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([driver_id])
  @@index([request_type])
  @@index([request_date])
  @@index([status], map: "rid_driver_requests_status_active_idx")
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([details], type: Gin)
  @@map("rid_driver_requests")
}

/// Table des performances chauffeurs
model rid_driver_performances {
  id               String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id        String    @db.Uuid
  driver_id        String    @db.Uuid
  period_start     DateTime  @db.Date
  period_end       DateTime  @db.Date
  trips_completed  Int       @default(0)
  trips_cancelled  Int       @default(0)
  on_time_rate     Decimal?  @db.Decimal(5, 2)
  avg_rating       Decimal?  @db.Decimal(3, 2)
  incidents_count  Int       @default(0)
  earnings_total   Decimal   @default(0) @db.Decimal(12, 2)
  hours_online     Decimal?  @db.Decimal(7, 2)
  metadata         Json      @default("{}") @db.JsonB
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  created_by       String?   @db.Uuid
  updated_at       DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by       String?   @db.Uuid
  deleted_at       DateTime? @db.Timestamptz(6)
  deleted_by       String?   @db.Uuid
  deletion_reason  String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver            rid_drivers  @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("driver_performance_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("driver_performance_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("driver_performance_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([driver_id])
  @@index([period_start])
  @@index([period_end])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("rid_driver_performances")
}

/// Table des listes noires chauffeurs
model rid_driver_blacklists {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  driver_id       String    @db.Uuid
  reason          String
  start_date      DateTime  @db.Timestamptz(6)
  end_date        DateTime? @db.Timestamptz(6)
  status          String    @default("active")
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver            rid_drivers  @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("driver_blacklist_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("driver_blacklist_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("driver_blacklist_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([driver_id])
  @@index([start_date])
  @@index([end_date])
  @@index([status], map: "rid_driver_blacklists_status_active_idx")
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("rid_driver_blacklists")
}

/// Table des véhicules
model flt_vehicles {
  id                  String                           @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id           String                           @db.Uuid
  make_id             String                           @db.Uuid
  model_id            String                           @db.Uuid
  license_plate       String                           @db.VarChar(20)
  vin                 String?                          @db.VarChar(17)
  year                Int
  color               String?                          @db.VarChar(50)
  seats               Int                              @default(4)
  vehicle_class       String?                          @db.VarChar(50)
  fuel_type           String?                          @db.VarChar(50)
  transmission        String?                          @db.VarChar(50)
  registration_date   DateTime?                        @db.Date
  insurance_number    String?                          @db.VarChar(100)
  insurance_expiry    DateTime?                        @db.Date
  last_inspection     DateTime?                        @db.Date
  next_inspection     DateTime?                        @db.Date
  odometer            Int?
  ownership_type      String                           @default("owned") @db.VarChar(50)
  metadata            Json                             @default("{}") @db.JsonB
  status              String                           @default("pending") @db.VarChar(50)
  created_at          DateTime                         @default(now()) @db.Timestamptz(6)
  created_by          String?                          @db.Uuid
  updated_at          DateTime                         @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by          String?                          @db.Uuid
  deleted_at          DateTime?                        @db.Timestamptz(6)
  deleted_by          String?                          @db.Uuid
  deletion_reason     String?

  tenant              adm_tenants                      @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  make                dir_car_makes                    @relation(fields: [make_id], references: [id], onDelete: Restrict)
  model               dir_car_models                   @relation(fields: [model_id], references: [id], onDelete: Restrict)
  created_by_member   adm_members?                     @relation("vehicle_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member   adm_members?                     @relation("vehicle_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member   adm_members?                     @relation("vehicle_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  trips               trp_trips[]
  events              flt_vehicle_events[]
  maintenance_records flt_vehicle_maintenance[]
  expenses            flt_vehicle_expenses[]
  insurances          flt_vehicle_insurances[]
  assignments         flt_vehicle_assignments[]
  maintenance_schedules sch_maintenance_schedules[]
  toll_transactions   fin_toll_transactions[]
  traffic_fines       fin_traffic_fines[]

  @@index([tenant_id])
  @@index([make_id])
  @@index([model_id])
  @@index([license_plate])
  @@index([vin])
  @@index([status], map: "flt_vehicles_status_active_idx")
  @@index([next_inspection])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
}

/// Table des affectations véhicule-chauffeur
model flt_vehicle_assignments {
  id              String                    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String                    @db.Uuid
  driver_id       String                    @db.Uuid
  vehicle_id      String                    @db.Uuid
  start_date      DateTime                  @db.Date
  end_date        DateTime?                 @db.Date
  assignment_type String                    @default("permanent") @db.VarChar(50)
  metadata        Json                      @default("{}") @db.JsonB
  status          String                    @default("active") @db.VarChar(50)
  created_at      DateTime                  @default(now()) @db.Timestamptz(6)
  created_by      String?                   @db.Uuid
  updated_at      DateTime                  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?                   @db.Uuid
  deleted_at      DateTime?                 @db.Timestamptz(6)
  deleted_by      String?                   @db.Uuid
  deletion_reason String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver            rid_drivers  @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  vehicle           flt_vehicles @relation(fields: [vehicle_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("assignment_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("assignment_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("assignment_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([driver_id])
  @@index([vehicle_id])
  @@index([start_date])
  @@index([end_date])
  @@index([status], map: "flt_vehicle_assignments_status_active_idx")
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
}

/// Table des courses (trips)
model trp_trips {
  id                  String                    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id           String                    @db.Uuid
  platform_id         String?                   @db.Uuid
  driver_id           String                    @db.Uuid
  vehicle_id          String?                   @db.Uuid
  client_id           String?                   @db.Uuid
  trip_date           DateTime?                 @db.Date
  start_time          DateTime?                 @db.Timestamptz(6)
  end_time            DateTime?                 @db.Timestamptz(6)
  pickup_latitude     Decimal?                  @db.Decimal
  pickup_longitude    Decimal?                  @db.Decimal
  dropoff_latitude    Decimal?                  @db.Decimal
  dropoff_longitude   Decimal?                  @db.Decimal
  distance_km         Decimal?                  @db.Decimal
  duration_minutes    Decimal?                  @db.Decimal
  fare_base           Decimal?                  @db.Decimal
  fare_distance       Decimal?                  @db.Decimal
  fare_time           Decimal?                  @db.Decimal
  surge_multiplier    Decimal?                  @db.Decimal
  tip_amount          Decimal?                  @db.Decimal
  platform_commission Decimal?                  @db.Decimal
  net_earnings        Decimal?                  @db.Decimal
  payment_method      String?                   @db.VarChar(50)
  status              String?                   @db.VarChar(50)
  created_at          DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at          DateTime                  @default(now()) @updatedAt @db.Timestamptz(6)
  deleted_at          DateTime?                 @db.Timestamptz(6)

  tenant              adm_tenants               @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver              rid_drivers               @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  vehicle             flt_vehicles?             @relation(fields: [vehicle_id], references: [id], onDelete: SetNull, onUpdate: Cascade)
  platform            dir_platforms?            @relation(fields: [platform_id], references: [id], onDelete: Restrict, onUpdate: Cascade)

  vehicle_expenses    flt_vehicle_expenses[]
  settlements         trp_settlements[]

  @@index([tenant_id])
  @@index([platform_id])
  @@index([driver_id])
  @@index([vehicle_id])
  @@index([client_id])
  @@index([trip_date])
  @@index([start_time])
  @@index([end_time])
  @@index([status], map: "trp_trips_status_active_idx")
  @@index([created_at(sort: Desc)])
  @@index([deleted_at])
  @@map("trp_trips")
}

/// Table des événements du cycle de vie des véhicules
model flt_vehicle_events {
  id              String   @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String   @db.Uuid
  vehicle_id      String   @db.Uuid
  event_type      String   // acquisition, disposal, maintenance, accident, handover, inspection, insurance
  event_date      DateTime @db.Timestamptz(6)
  severity        String?  // minor, moderate, severe, total_loss
  downtime_hours  Int?
  cost_amount     Decimal? @db.Decimal(10, 2)
  currency        String   @default("EUR") @db.Char(3)
  details         Json     @default("{}") @db.JsonB
  notes           String?
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  created_by      String?  @db.Uuid
  updated_at      DateTime @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?  @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?  @db.Uuid
  deletion_reason String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  vehicle           flt_vehicles @relation(fields: [vehicle_id], references: [id], onDelete: Cascade)
  created_by_member adm_members? @relation("vehicle_event_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("vehicle_event_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("vehicle_event_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([vehicle_id])
  @@index([event_type])
  @@index([event_date])
  @@index([severity], map: "flt_vehicle_events_severity_active_idx")
  @@index([created_at(sort: Desc)])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([details], type: Gin)
}

/// Table de maintenance des véhicules
model flt_vehicle_maintenance {
  id                String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id         String    @db.Uuid
  vehicle_id        String    @db.Uuid
  maintenance_type  String    // oil_change, service, inspection, tire_rotation, brake_service, repair, other
  scheduled_date    DateTime  @db.Date
  completed_date    DateTime? @db.Date
  odometer_reading  Int?
  next_service_km   Int?
  next_service_date DateTime? @db.Date
  provider_name     String?
  provider_contact  String?
  cost_amount       Decimal?  @db.Decimal(10, 2)
  currency          String    @default("EUR") @db.Char(3)
  invoice_reference String?
  parts_replaced    String?
  notes             String?
  status            String    @default("scheduled") // scheduled, in_progress, completed, cancelled
  metadata          Json      @default("{}") @db.JsonB
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  created_by        String?   @db.Uuid
  updated_at        DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by        String?   @db.Uuid

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  vehicle           flt_vehicles @relation(fields: [vehicle_id], references: [id], onDelete: Cascade)
  created_by_member adm_members? @relation("vehicle_maintenance_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("vehicle_maintenance_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([vehicle_id])
  @@index([maintenance_type])
  @@index([scheduled_date], map: "flt_vehicle_maintenance_scheduled_date_active_idx")
  @@index([status], map: "flt_vehicle_maintenance_status_active_idx")
  @@index([next_service_date], map: "flt_vehicle_maintenance_next_service_idx")
  @@index([created_at(sort: Desc)])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
}

/// Table des dépenses véhicules
model flt_vehicle_expenses {
  id                     String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id              String    @db.Uuid
  vehicle_id             String    @db.Uuid
  driver_id              String?   @db.Uuid
  ride_id                String?   @db.Uuid
  expense_date           DateTime  @db.Date
  expense_category       String    // fuel, toll, parking, wash, repair, fine, other
  amount                 Decimal   @db.Decimal(10, 2)
  currency               String    @default("EUR") @db.Char(3)
  payment_method         String?   // cash, card, fuel_card, toll_card, company_account
  receipt_url            String?
  odometer_reading       Int?
  quantity               Decimal?  @db.Decimal(10, 2)
  unit_price             Decimal?  @db.Decimal(10, 2)
  location               String?
  vendor                 String?
  description            String?
  reimbursed             Boolean   @default(false)
  reimbursed_at          DateTime? @db.Timestamptz(6)
  reimbursed_in_batch_id String?   @db.Uuid
  notes                  String?
  metadata               Json      @default("{}") @db.JsonB
  created_at             DateTime  @default(now()) @db.Timestamptz(6)
  created_by             String?   @db.Uuid
  updated_at             DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by             String?   @db.Uuid
  deleted_at             DateTime? @db.Timestamptz(6)
  deleted_by             String?   @db.Uuid
  deletion_reason        String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  vehicle           flt_vehicles @relation(fields: [vehicle_id], references: [id], onDelete: Cascade)
  driver            rid_drivers? @relation(fields: [driver_id], references: [id], onDelete: SetNull)
  trip              trp_trips?   @relation(fields: [ride_id], references: [id], onDelete: SetNull)
  created_by_member adm_members? @relation("vehicle_expense_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("vehicle_expense_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("vehicle_expense_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([vehicle_id])
  @@index([driver_id])
  @@index([ride_id])
  @@index([expense_category])
  @@index([expense_date])
  @@index([reimbursed], map: "flt_vehicle_expenses_reimbursed_active_idx")
  @@index([created_at(sort: Desc)])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
}

/// Table des assurances véhicules
model flt_vehicle_insurances {
  id                String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id         String    @db.Uuid
  vehicle_id        String    @db.Uuid
  provider_name     String
  policy_number     String
  policy_type       String    // comprehensive, third_party, collision, other
  coverage_amount   Decimal?  @db.Decimal(12, 2)
  currency          String    @default("EUR") @db.Char(3)
  deductible_amount Decimal?  @db.Decimal(10, 2)
  premium_amount    Decimal   @db.Decimal(10, 2)
  premium_frequency String    @default("annual") // annual, semi_annual, quarterly, monthly
  start_date        DateTime  @db.Date
  end_date          DateTime  @db.Date
  is_active         Boolean   @default(true)
  auto_renew        Boolean   @default(false)
  contact_name      String?
  contact_phone     String?
  contact_email     String?
  document_url      String?
  claim_count       Int       @default(0)
  last_claim_date   DateTime? @db.Date
  notes             String?
  metadata          Json      @default("{}") @db.JsonB
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  created_by        String?   @db.Uuid
  updated_at        DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by        String?   @db.Uuid
  deleted_at        DateTime? @db.Timestamptz(6)
  deleted_by        String?   @db.Uuid
  deletion_reason   String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  vehicle           flt_vehicles @relation(fields: [vehicle_id], references: [id], onDelete: Cascade)
  created_by_member adm_members? @relation("vehicle_insurance_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("vehicle_insurance_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("vehicle_insurance_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, policy_number], map: "flt_vehicle_insurances_tenant_policy_uq")
  @@index([tenant_id])
  @@index([vehicle_id])
  @@index([policy_number])
  @@index([policy_type])
  @@index([end_date], map: "flt_vehicle_insurances_end_date_active_idx")
  @@index([is_active], map: "flt_vehicle_insurances_is_active_idx")
  @@index([created_at(sort: Desc)])
  @@index([metadata], type: Gin)
}

/// Table des formations chauffeurs
model rid_driver_training {
  id               String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id        String    @db.Uuid
  driver_id        String    @db.Uuid
  training_name    String
  provider         String?
  status           String    @default("planned")
  assigned_at      DateTime? @db.Timestamptz(6)
  due_at           DateTime? @db.Timestamptz(6)
  completed_at     DateTime? @db.Timestamptz(6)
  score            Decimal?  @db.Decimal(5, 2)
  certificate_url  String?
  metadata         Json      @default("{}") @db.JsonB
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  created_by       String?   @db.Uuid
  updated_at       DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by       String?   @db.Uuid
  deleted_at       DateTime? @db.Timestamptz(6)
  deleted_by       String?   @db.Uuid
  deletion_reason  String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver            rid_drivers  @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("driver_training_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("driver_training_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("driver_training_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, driver_id, training_name, deleted_at], map: "rid_driver_training_tenant_driver_training_unique")
  @@index([tenant_id])
  @@index([driver_id])
  @@index([training_name])
  @@index([status], map: "rid_driver_training_status_active_idx")
  @@index([due_at])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("rid_driver_training")
}

/// Table des shifts/plages de travail chauffeurs
model sch_shifts {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  driver_id       String    @db.Uuid
  start_time      DateTime  @db.Timestamptz(6)
  end_time        DateTime  @db.Timestamptz(6)
  status          String    @default("scheduled")
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver            rid_drivers  @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("shift_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("shift_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("shift_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, driver_id, start_time, deleted_at], map: "sch_shifts_tenant_driver_start_unique")
  @@index([tenant_id])
  @@index([driver_id])
  @@index([start_time])
  @@index([end_time])
  @@index([status], map: "sch_shifts_status_active_idx")
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("sch_shifts")
}

/// Table des planifications de maintenance véhicules
model sch_maintenance_schedules {
  id               String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id        String    @db.Uuid
  vehicle_id       String    @db.Uuid
  scheduled_date   DateTime  @db.Date
  maintenance_type String
  status           String    @default("scheduled")
  metadata         Json      @default("{}") @db.JsonB
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  created_by       String?   @db.Uuid
  updated_at       DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by       String?   @db.Uuid
  deleted_at       DateTime? @db.Timestamptz(6)
  deleted_by       String?   @db.Uuid
  deletion_reason  String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  vehicle           flt_vehicles @relation(fields: [vehicle_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("maintenance_schedule_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("maintenance_schedule_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("maintenance_schedule_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, vehicle_id, scheduled_date, maintenance_type, deleted_at], map: "sch_maintenance_schedules_tenant_vehicle_date_type_unique")
  @@index([tenant_id])
  @@index([vehicle_id])
  @@index([scheduled_date])
  @@index([maintenance_type])
  @@index([status], map: "sch_maintenance_schedules_status_active_idx")
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("sch_maintenance_schedules")
}

/// Table des objectifs de performance (KPIs)
model sch_goals {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  goal_type       String
  target_value    Decimal   @db.Decimal
  period_start    DateTime  @db.Date
  period_end      DateTime  @db.Date
  assigned_to     String    @db.Uuid
  status          String    @default("active")
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("goal_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("goal_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("goal_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, goal_type, period_start, assigned_to, deleted_at], map: "sch_goals_tenant_type_period_assigned_unique")
  @@index([tenant_id])
  @@index([goal_type])
  @@index([assigned_to])
  @@index([period_start])
  @@index([period_end])
  @@index([status], map: "sch_goals_status_active_idx")
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("sch_goals")
}

model sch_tasks {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  task_type       String
  description     String
  target_id       String    @db.Uuid
  due_at          DateTime? @db.Timestamptz(6)
  status          String    @default("pending")
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("task_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("task_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("task_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([target_id])
  @@index([due_at])
  @@index([status], map: "sch_tasks_status_active_idx")
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("sch_tasks")
}

model trp_platform_accounts {
  id                 String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id          String    @db.Uuid
  platform_id        String    @db.Uuid
  account_identifier String
  api_key            String?
  metadata           Json      @default("{}") @db.JsonB
  created_at         DateTime  @default(now()) @db.Timestamptz(6)
  created_by         String?   @db.Uuid
  updated_at         DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by         String?   @db.Uuid
  deleted_at         DateTime? @db.Timestamptz(6)
  deleted_by         String?   @db.Uuid
  deletion_reason    String?

  tenant            adm_tenants     @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  platform          dir_platforms   @relation(fields: [platform_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members?    @relation("platform_account_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members?    @relation("platform_account_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members?    @relation("platform_account_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, platform_id, deleted_at], map: "trp_platform_accounts_tenant_platform_unique")
  @@index([tenant_id])
  @@index([platform_id])
  @@index([account_identifier])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("trp_platform_accounts")
}

model trp_settlements {
  id                   String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id            String    @db.Uuid
  trip_id              String    @db.Uuid
  settlement_reference String
  amount               Decimal   @db.Decimal(14, 2)
  currency             String    @db.VarChar(3)
  platform_commission  Decimal   @db.Decimal(14, 2)
  net_amount           Decimal   @db.Decimal(14, 2)
  settlement_date      DateTime  @db.Date
  status               String    @default("pending")
  metadata             Json      @default("{}") @db.JsonB
  created_at           DateTime  @default(now()) @db.Timestamptz(6)
  created_by           String?   @db.Uuid
  updated_at           DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by           String?   @db.Uuid
  deleted_at           DateTime? @db.Timestamptz(6)
  deleted_by           String?   @db.Uuid
  deletion_reason      String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  trip              trp_trips    @relation(fields: [trip_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("settlement_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("settlement_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("settlement_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, trip_id, settlement_reference, deleted_at], map: "trp_settlements_tenant_trip_ref_unique")
  @@index([tenant_id])
  @@index([trip_id])
  @@index([settlement_date])
  @@index([status], map: "trp_settlements_status_active_idx")
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("trp_settlements")
}

model trp_client_invoices {
  id             String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id      String    @db.Uuid
  client_id      String    @db.Uuid
  invoice_number String
  invoice_date   DateTime  @db.Date
  due_date       DateTime  @db.Date
  total_amount   Decimal   @db.Decimal(14, 2)
  currency       String    @db.VarChar(3)
  status         String    @default("draft")
  metadata       Json      @default("{}") @db.JsonB
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  created_by     String?   @db.Uuid
  updated_at     DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by     String?   @db.Uuid
  deleted_at     DateTime? @db.Timestamptz(6)
  deleted_by     String?   @db.Uuid
  deletion_reason String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("client_invoice_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("client_invoice_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("client_invoice_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, invoice_number, deleted_at], map: "trp_client_invoices_tenant_invoice_unique")
  @@index([tenant_id])
  @@index([client_id])
  @@index([invoice_date])
  @@index([due_date])
  @@index([status], map: "trp_client_invoices_status_active_idx")
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("trp_client_invoices")
}

model fin_accounts {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  account_name    String
  account_type    String
  currency        String    @db.VarChar(3)
  balance         Decimal   @default(0) @db.Decimal(18, 2)
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant            adm_tenants        @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members?       @relation("fin_account_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members?       @relation("fin_account_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members?       @relation("fin_account_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  transactions      fin_transactions[]

  @@unique([tenant_id, account_name, deleted_at], map: "fin_accounts_tenant_account_unique")
  @@index([tenant_id])
  @@index([account_name])
  @@index([account_type])
  @@index([currency])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("fin_accounts")
}

/// Table des transactions financières (crédit/débit)
model fin_transactions {
  id                String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id         String    @db.Uuid
  account_id        String    @db.Uuid
  transaction_type  String
  amount            Decimal   @db.Decimal(18, 2)
  currency          String    @db.VarChar(3)
  reference         String
  description       String?
  transaction_date  DateTime  @db.Timestamptz(6)
  status            String    @default("pending")
  metadata          Json      @default("{}") @db.JsonB
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  created_by        String?   @db.Uuid
  updated_at        DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by        String?   @db.Uuid
  deleted_at        DateTime? @db.Timestamptz(6)
  deleted_by        String?   @db.Uuid
  deletion_reason   String?

  tenant            adm_tenants    @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  account           fin_accounts   @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members?   @relation("fin_transaction_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members?   @relation("fin_transaction_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members?   @relation("fin_transaction_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([account_id])
  @@index([transaction_date])
  @@index([status])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("fin_transactions")
}

/// Table des lots de paiement conducteurs
model fin_driver_payment_batches {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  batch_reference String
  payment_date    DateTime  @db.Date
  total_amount    Decimal   @db.Decimal(18, 2)
  currency        String    @db.VarChar(3)
  status          String    @default("pending")
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant            adm_tenants           @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members?          @relation("fin_driver_payment_batch_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members?          @relation("fin_driver_payment_batch_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members?          @relation("fin_driver_payment_batch_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  payments          fin_driver_payments[]

  @@unique([tenant_id, batch_reference, deleted_at], map: "fin_driver_payment_batches_tenant_batch_unique")
  @@index([tenant_id])
  @@index([batch_reference])
  @@index([payment_date])
  @@index([status])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("fin_driver_payment_batches")
}

/// Table des paiements individuels aux conducteurs
model fin_driver_payments {
  id                String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id         String    @db.Uuid
  driver_id         String    @db.Uuid
  payment_batch_id  String    @db.Uuid
  amount            Decimal   @db.Decimal(18, 2)
  currency          String    @db.VarChar(3)
  payment_date      DateTime  @db.Date
  status            String    @default("pending")
  metadata          Json      @default("{}") @db.JsonB
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  created_by        String?   @db.Uuid
  updated_at        DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by        String?   @db.Uuid
  deleted_at        DateTime? @db.Timestamptz(6)
  deleted_by        String?   @db.Uuid
  deletion_reason   String?

  tenant            adm_tenants                 @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver            rid_drivers                 @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  payment_batch     fin_driver_payment_batches  @relation(fields: [payment_batch_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members?                @relation("fin_driver_payment_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members?                @relation("fin_driver_payment_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members?                @relation("fin_driver_payment_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([driver_id])
  @@index([payment_batch_id])
  @@index([status])
  @@index([payment_date])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("fin_driver_payments")
}

/// Table des transactions de péage
model fin_toll_transactions {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  driver_id       String    @db.Uuid
  vehicle_id      String    @db.Uuid
  toll_gate       String
  toll_date       DateTime  @db.Date
  amount          Decimal   @db.Decimal(14, 2)
  currency        String    @db.VarChar(3)
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver            rid_drivers  @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  vehicle           flt_vehicles @relation(fields: [vehicle_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("fin_toll_transaction_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("fin_toll_transaction_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("fin_toll_transaction_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, driver_id, vehicle_id, toll_date, deleted_at], map: "fin_toll_transactions_tenant_driver_vehicle_date_unique")
  @@index([tenant_id])
  @@index([driver_id])
  @@index([vehicle_id])
  @@index([toll_date])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("fin_toll_transactions")
}

/// Table des amendes de circulation
model fin_traffic_fines {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  driver_id       String    @db.Uuid
  vehicle_id      String    @db.Uuid
  fine_reference  String
  fine_date       DateTime  @db.Date
  fine_type       String
  amount          Decimal   @db.Decimal(14, 2)
  currency        String    @db.VarChar(3)
  status          String    @default("pending")
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver            rid_drivers  @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  vehicle           flt_vehicles @relation(fields: [vehicle_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("fin_traffic_fine_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("fin_traffic_fine_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("fin_traffic_fine_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, fine_reference, deleted_at], map: "fin_traffic_fines_tenant_fine_reference_unique")
  @@index([tenant_id])
  @@index([driver_id])
  @@index([vehicle_id])
  @@index([fine_date])
  @@index([status])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("fin_traffic_fines")
}

/// Table des imports de revenus depuis sources externes
model rev_revenue_imports {
  id               String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id        String    @db.Uuid
  import_reference String
  import_date      DateTime  @db.Date
  status           String    @default("pending")
  total_revenue    Decimal   @default(0) @db.Decimal(18, 2)
  currency         String    @db.VarChar(3)
  metadata         Json      @default("{}") @db.JsonB
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  created_by       String?   @db.Uuid
  updated_at       DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by       String?   @db.Uuid
  deleted_at       DateTime? @db.Timestamptz(6)
  deleted_by       String?   @db.Uuid
  deletion_reason  String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members?           @relation("rev_revenue_import_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members?           @relation("rev_revenue_import_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members?           @relation("rev_revenue_import_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  reconciliations   rev_reconciliations[]

  @@unique([tenant_id, import_reference, deleted_at], map: "rev_revenue_imports_tenant_import_reference_unique")
  @@index([tenant_id])
  @@index([import_date])
  @@index([status])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("rev_revenue_imports")
}

/// Table des revenus agrégés par conducteur et par période
model rev_driver_revenues {
  id                String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id         String    @db.Uuid
  driver_id         String    @db.Uuid
  period_start      DateTime  @db.Date
  period_end        DateTime  @db.Date
  total_revenue     Decimal   @default(0) @db.Decimal(18, 2)
  commission_amount Decimal   @default(0) @db.Decimal(18, 2)
  net_revenue       Decimal   @default(0) @db.Decimal(18, 2)
  metadata          Json      @default("{}") @db.JsonB
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  created_by        String?   @db.Uuid
  updated_at        DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by        String?   @db.Uuid
  deleted_at        DateTime? @db.Timestamptz(6)
  deleted_by        String?   @db.Uuid
  deletion_reason   String?

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  driver            rid_drivers  @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("rev_driver_revenue_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("rev_driver_revenue_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("rev_driver_revenue_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, driver_id, period_start, deleted_at], map: "rev_driver_revenues_tenant_driver_period_unique")
  @@index([tenant_id])
  @@index([driver_id])
  @@index([period_start])
  @@index([period_end])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("rev_driver_revenues")
}

/// Table des rapprochements entre revenus importés et transactions
model rev_reconciliations {
  id                  String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id           String    @db.Uuid
  import_id           String    @db.Uuid
  reconciliation_date DateTime  @db.Date
  status              String    @default("pending")
  notes               String?
  metadata            Json      @default("{}") @db.JsonB
  created_at          DateTime  @default(now()) @db.Timestamptz(6)
  created_by          String?   @db.Uuid
  updated_at          DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by          String?   @db.Uuid
  deleted_at          DateTime? @db.Timestamptz(6)
  deleted_by          String?   @db.Uuid
  deletion_reason     String?

  tenant            adm_tenants         @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  import            rev_revenue_imports @relation(fields: [import_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members?        @relation("rev_reconciliation_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members?        @relation("rev_reconciliation_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members?        @relation("rev_reconciliation_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, import_id, reconciliation_date, deleted_at], map: "rev_reconciliations_tenant_import_date_unique")
  @@index([tenant_id])
  @@index([import_id])
  @@index([reconciliation_date])
  @@index([status])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("rev_reconciliations")
}

/// Table des plans d'abonnement SaaS (global, non-tenant)
model bil_billing_plans {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  plan_name       String
  description     String?
  monthly_fee     Decimal   @default(0) @db.Decimal(14, 2)
  annual_fee      Decimal   @default(0) @db.Decimal(14, 2)
  currency        String    @db.VarChar(3)
  features        Json      @default("{}") @db.JsonB
  status          String    @default("active")
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant_subscriptions bil_tenant_subscriptions[]
  created_by_employee  adm_provider_employees?    @relation("billing_plan_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_employee  adm_provider_employees?    @relation("billing_plan_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_employee  adm_provider_employees?    @relation("billing_plan_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([plan_name, deleted_at], map: "bil_billing_plans_plan_name_key")
  @@index([status])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@index([features], type: Gin)
  @@map("bil_billing_plans")
}

/// Table des abonnements des tenants aux plans SaaS
model bil_tenant_subscriptions {
  id                 String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id          String    @db.Uuid
  plan_id            String    @db.Uuid
  subscription_start DateTime  @db.Date
  subscription_end   DateTime? @db.Date
  status             String    @default("active")
  metadata           Json      @default("{}") @db.JsonB
  created_at         DateTime  @default(now()) @db.Timestamptz(6)
  created_by         String?   @db.Uuid
  updated_at         DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by         String?   @db.Uuid
  deleted_at         DateTime? @db.Timestamptz(6)
  deleted_by         String?   @db.Uuid
  deletion_reason    String?

  tenant              adm_tenants             @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  plan                bil_billing_plans       @relation(fields: [plan_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_employee adm_provider_employees? @relation("tenant_subscription_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_employee adm_provider_employees? @relation("tenant_subscription_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_employee adm_provider_employees? @relation("tenant_subscription_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, plan_id, deleted_at], map: "bil_tenant_subscriptions_tenant_id_plan_id_key")
  @@index([tenant_id])
  @@index([plan_id])
  @@index([subscription_start])
  @@index([subscription_end])
  @@index([status])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("bil_tenant_subscriptions")
}

/// Table des métriques d'utilisation par tenant
model bil_tenant_usage_metrics {
  id           String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id    String    @db.Uuid
  metric_name  String    @db.VarChar(50)
  metric_value Decimal   @default(0) @db.Decimal(18, 2)
  period_start DateTime  @db.Date
  period_end   DateTime  @db.Date
  metadata     Json      @default("{}") @db.JsonB
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  created_by   String?   @db.Uuid
  updated_at   DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by   String?   @db.Uuid
  deleted_at   DateTime? @db.Timestamptz(6)
  deleted_by   String?   @db.Uuid
  deletion_reason String?

  tenant              adm_tenants             @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_employee adm_provider_employees? @relation("usage_metric_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_employee adm_provider_employees? @relation("usage_metric_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_employee adm_provider_employees? @relation("usage_metric_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, metric_name, period_start, deleted_at], map: "bil_tenant_usage_metrics_tenant_id_metric_name_period_start_key")
  @@index([tenant_id])
  @@index([metric_name])
  @@index([period_start])
  @@index([period_end])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("bil_tenant_usage_metrics")
}

/// Table des factures SaaS émises aux tenants
model bil_tenant_invoices {
  id             String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id      String    @db.Uuid
  invoice_number String
  invoice_date   DateTime  @db.Date
  due_date       DateTime  @db.Date
  total_amount   Decimal   @default(0) @db.Decimal(18, 2)
  currency       String    @db.VarChar(3)
  status         String    @default("draft")
  metadata       Json      @default("{}") @db.JsonB
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  created_by     String?   @db.Uuid
  updated_at     DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by     String?   @db.Uuid
  deleted_at     DateTime? @db.Timestamptz(6)
  deleted_by     String?   @db.Uuid
  deletion_reason String?

  tenant              adm_tenants                @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_employee adm_provider_employees?    @relation("tenant_invoice_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_employee adm_provider_employees?    @relation("tenant_invoice_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_employee adm_provider_employees?    @relation("tenant_invoice_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  invoice_lines       bil_tenant_invoice_lines[]

  @@unique([tenant_id, invoice_number, deleted_at], map: "bil_tenant_invoices_tenant_id_invoice_number_key")
  @@index([tenant_id])
  @@index([invoice_number])
  @@index([invoice_date])
  @@index([due_date])
  @@index([status])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("bil_tenant_invoices")
}

/// Table des lignes d'articles de factures SaaS
model bil_tenant_invoice_lines {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  invoice_id      String    @db.Uuid
  description     String
  amount          Decimal   @default(0) @db.Decimal(18, 2)
  quantity        Decimal   @default(1) @db.Decimal(10, 2)
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  invoice             bil_tenant_invoices        @relation(fields: [invoice_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_employee adm_provider_employees?    @relation("invoice_line_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_employee adm_provider_employees?    @relation("invoice_line_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_employee adm_provider_employees?    @relation("invoice_line_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([invoice_id, description, deleted_at], map: "bil_tenant_invoice_lines_invoice_id_description_key")
  @@index([invoice_id])
  @@index([description])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("bil_tenant_invoice_lines")
}

/// Table des méthodes de paiement des tenants
model bil_payment_methods {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  payment_type    String
  provider_token  String
  expires_at      DateTime? @db.Date
  status          String    @default("active")
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant              adm_tenants             @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_employee adm_provider_employees? @relation("payment_method_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_employee adm_provider_employees? @relation("payment_method_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_employee adm_provider_employees? @relation("payment_method_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([tenant_id, payment_type, deleted_at], map: "bil_payment_methods_tenant_id_payment_type_key")
  @@index([tenant_id])
  @@index([payment_type])
  @@index([expires_at])
  @@index([status])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("bil_payment_methods")
}

/// Table des opportunités commerciales CRM
/// Table interne FleetCore - pipeline de ventes (pas de tenant_id)
model crm_opportunities {
  id                 String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  lead_id            String    @db.Uuid
  stage              String    @default("prospect") // Enum: prospect, proposal, negotiation, closed_won, closed_lost
  expected_value     Decimal?  @db.Decimal(18, 2)
  close_date         DateTime? @db.Date
  assigned_to        String?   @db.Uuid
  probability        Int?
  metadata           Json      @default("{}") @db.JsonB
  created_at         DateTime  @default(now()) @db.Timestamptz(6)
  created_by         String?   @db.Uuid
  updated_at         DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by         String?   @db.Uuid
  deleted_at         DateTime? @db.Timestamptz(6)
  deleted_by         String?   @db.Uuid
  deletion_reason    String?

  lead                     crm_leads               @relation(fields: [lead_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  assigned_to_employee     adm_provider_employees? @relation("opportunity_assigned_to", fields: [assigned_to], references: [id], onDelete: SetNull)
  created_by_employee      adm_provider_employees? @relation("opportunity_created_by", fields: [created_by], references: [id], onDelete: SetNull)
  updated_by_employee      adm_provider_employees? @relation("opportunity_updated_by", fields: [updated_by], references: [id], onDelete: SetNull)
  deleted_by_employee      adm_provider_employees? @relation("opportunity_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull)
  contracts                crm_contracts[]

  @@index([lead_id])
  @@index([stage])
  @@index([close_date])
  @@index([assigned_to])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("crm_opportunities")
}

/// Table interne FleetCore - contrats signés (pas de tenant_id)
model crm_contracts {
  id                 String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  lead_id            String?   @db.Uuid
  opportunity_id     String?   @db.Uuid
  contract_reference String    @db.VarChar(100)
  contract_date      DateTime  @db.Date
  effective_date     DateTime  @db.Date
  expiry_date        DateTime? @db.Date
  total_value        Decimal   @db.Decimal(18, 2)
  currency           String    @default("EUR") @db.Char(3)
  status             String    @default("draft") // Enum: draft, pending_signature, active, suspended, expired, terminated
  metadata           Json      @default("{}") @db.JsonB
  created_at         DateTime  @default(now()) @db.Timestamptz(6)
  created_by         String?   @db.Uuid
  updated_at         DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by         String?   @db.Uuid
  deleted_at         DateTime? @db.Timestamptz(6)
  deleted_by         String?   @db.Uuid
  deletion_reason    String?

  lead                crm_leads?              @relation(fields: [lead_id], references: [id], onDelete: SetNull)
  opportunity         crm_opportunities?      @relation(fields: [opportunity_id], references: [id], onDelete: SetNull)
  created_by_employee adm_provider_employees? @relation("contract_created_by", fields: [created_by], references: [id], onDelete: SetNull)
  updated_by_employee adm_provider_employees? @relation("contract_updated_by", fields: [updated_by], references: [id], onDelete: SetNull)
  deleted_by_employee adm_provider_employees? @relation("contract_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull)

  @@unique([contract_reference, deleted_at])
  @@index([lead_id])
  @@index([opportunity_id])
  @@index([contract_date])
  @@index([effective_date])
  @@index([expiry_date])
  @@index([status])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("crm_contracts")
}

/// Table des tickets de support
model sup_tickets {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  raised_by       String    @db.Uuid
  subject         String
  description     String
  status          String    @default("open")
  priority        String    @default("medium")
  assigned_to     String?   @db.Uuid
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  tenant              adm_tenants             @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  assigned_to_employee adm_provider_employees? @relation("ticket_assigned_to", fields: [assigned_to], references: [id], onDelete: SetNull, onUpdate: Cascade)
  created_by_member   adm_members?            @relation("ticket_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member   adm_members?            @relation("ticket_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member   adm_members?            @relation("ticket_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  messages            sup_ticket_messages[]

  @@unique([tenant_id, raised_by, created_at, deleted_at], map: "sup_tickets_tenant_id_raised_by_created_at_deleted_at_key")
  @@index([tenant_id])
  @@index([raised_by])
  @@index([assigned_to])
  @@index([status], map: "sup_tickets_status_active_idx")
  @@index([priority], map: "sup_tickets_priority_active_idx")
  @@index([created_at])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("sup_tickets")
}

/// Table des messages de tickets de support
model sup_ticket_messages {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  ticket_id       String    @db.Uuid
  sender_id       String    @db.Uuid
  message_body    String
  sent_at         DateTime  @default(now()) @db.Timestamptz(6)
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid
  deletion_reason String?

  ticket            sup_tickets  @relation(fields: [ticket_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("ticket_message_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("ticket_message_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("ticket_message_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([ticket_id])
  @@index([sent_at])
  @@index([deleted_at])
  @@index([created_by])
  @@index([updated_by])
  @@index([metadata], type: Gin)
  @@map("sup_ticket_messages")
}

/// Table des retours clients
model sup_customer_feedback {
  id              String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  tenant_id       String    @db.Uuid
  submitted_by    String    @db.Uuid
  submitter_type  String    @db.VarChar(50)
  feedback_text   String
  rating          Int
  metadata        Json      @default("{}") @db.JsonB
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  updated_by      String?   @db.Uuid
  deleted_at      DateTime? @db.Timestamptz(6)
  deleted_by      String?   @db.Uuid

  tenant            adm_tenants  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_by_member adm_members? @relation("feedback_created_by", fields: [created_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  updated_by_member adm_members? @relation("feedback_updated_by", fields: [updated_by], references: [id], onDelete: SetNull, onUpdate: Cascade)
  deleted_by_member adm_members? @relation("feedback_deleted_by", fields: [deleted_by], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([tenant_id])
  @@index([tenant_id, submitted_by])
  @@index([rating])
  @@index([created_at(sort: Desc)])
  @@index([deleted_at])
  @@index([metadata], type: Gin)
  @@map("sup_customer_feedback")
}
