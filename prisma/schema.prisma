// FleetCore V2 Schema - Phase 1 : Tables cœur uniquement
// Migration Mumbai → Zurich
// Date: 2025-10-07

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// ============================================
// DOMAINE ADMINISTRATION (adm_)
// ============================================

/// Table des organisations/tenants (remplace organization)
model adm_tenants {
  id                    String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                  String
  subdomain             String      @unique
  country_code          String      @db.VarChar(2)
  clerk_organization_id String?     @unique @db.VarChar(255)

  // Métadonnées flexibles
  vat_rate              Decimal?    @db.Decimal(5, 2)
  currency              String?     @default("EUR") @db.VarChar(3)
  timezone              String?     @default("Europe/Paris") @db.VarChar(50)
  metadata              Json?       @db.JsonB

  // Soft delete
  status                String      @default("active") @db.VarChar(50)
  deleted_at            DateTime?   @db.Timestamptz(6)
  deleted_by            String?     @db.Uuid
  deletion_reason       String?

  // Audit
  created_at            DateTime    @default(now()) @db.Timestamptz(6)
  updated_at            DateTime    @updatedAt @db.Timestamptz(6)

  // Relations
  members               adm_members[]
  leads                 crm_leads[]

  // Index pour performance
  @@index([status])
  @@index([country_code])
  @@index([deleted_at])
}

/// Table des membres/utilisateurs (remplace member)
model adm_members {
  id                String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  tenant_id         String      @db.Uuid
  email             String      @db.VarChar(255)
  clerk_user_id     String      @unique @db.VarChar(255)

  // Informations utilisateur
  first_name        String?     @db.VarChar(100)
  last_name         String?     @db.VarChar(100)
  phone             String?     @db.VarChar(50)
  role              String      @default("member") @db.VarChar(50)

  // Métadonnées
  metadata          Json?       @db.JsonB
  last_login_at     DateTime?   @db.Timestamptz(6)

  // Soft delete
  status            String      @default("active") @db.VarChar(50)
  deleted_at        DateTime?   @db.Timestamptz(6)
  deleted_by        String?     @db.Uuid
  deletion_reason   String?

  // Audit
  created_at        DateTime    @default(now()) @db.Timestamptz(6)
  updated_at        DateTime    @updatedAt @db.Timestamptz(6)

  // Relations
  tenant            adm_tenants @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  // Contraintes uniques et index
  @@unique([tenant_id, email])
  @@index([tenant_id])
  @@index([status])
  @@index([deleted_at])
  @@index([email])
}

// ============================================
// DOMAINE CRM (crm_)
// ============================================

/// Table des leads/prospects (remplace sys_demo_lead)
model crm_leads {
  id                String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  // Informations du prospect
  full_name         String      @db.VarChar(255)
  email             String      @db.VarChar(255)
  phone             String?     @db.VarChar(50)
  demo_company_name String      @db.VarChar(255) @map("company_name")

  // Détails de qualification
  fleet_size        String?     @db.VarChar(50)
  country_code      String      @default("FR") @db.VarChar(2)
  status            String      @default("new") @db.VarChar(50) // new, contacted, qualified, converted, lost

  // Enrichissement
  message           String?     @db.Text
  source            String?     @db.VarChar(100) // website, referral, campaign, etc.
  campaign_id       String?     @db.VarChar(100)

  // Suivi commercial
  assigned_to       String?     @db.Uuid
  qualified_date    DateTime?   @db.Timestamptz(6)
  converted_date    DateTime?   @db.Timestamptz(6)
  lost_reason       String?     @db.Text

  // Lien vers tenant (après conversion)
  tenant_id         String?     @db.Uuid

  // Métadonnées
  metadata          Json?       @db.JsonB
  notes             String?     @db.Text

  // Soft delete
  deleted_at        DateTime?   @db.Timestamptz(6)
  deleted_by        String?     @db.Uuid
  deletion_reason   String?

  // Audit
  created_at        DateTime    @default(now()) @db.Timestamptz(6)
  updated_at        DateTime    @updatedAt @db.Timestamptz(6)

  // Relations
  tenant            adm_tenants? @relation(fields: [tenant_id], references: [id], onDelete: SetNull)

  // Index pour performance
  @@index([email])
  @@index([status])
  @@index([country_code])
  @@index([created_at])
  @@index([tenant_id])
  @@index([assigned_to])
}

